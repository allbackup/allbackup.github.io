<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>The types&nbsp;module</title></head><body data-page-id="698"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">The types&nbsp;module</h1></div><div class="yui-ge"><div class="yui-u first"><p>This module contains type objects for all object types defined
by the standard interpreter. All objects of the same type share a
single type object, so you can use <b>is</b> to test if an object
has a given type.</p><div class="example">
<b style="example">Example: Using the types module</b>
<pre>
# File: <a href="types/types-example-1.py">types-example-1.py</a>

import types

def check(object):
    print object,
    if type(object) is types.IntType:
        print "INTEGER",
    if type(object) is types.FloatType:
        print "FLOAT",
    if type(object) is types.StringType:
        print "STRING",
    if type(object) is types.ClassType:
        print "CLASS",
    if type(object) is types.InstanceType:
        print "INSTANCE",
    print

check(0)
check(0.0)
check("0")

class A:
    pass

class B:
    pass

check(A)
check(B)

a = A()
b = B()

check(a)
check(b)

</pre><pre class="computeroutput" moreinfo="NONE">
0 INTEGER
0.0 FLOAT
0 STRING
A CLASS
B CLASS
&lt;A instance at 796960&gt; INSTANCE
&lt;B instance at 796990&gt; INSTANCE
</pre></div><p>Note that all classes have the same type, and so do all
instances. To test what class hierarchy a class or an instance
belongs to, use the built-in <b>issubclass</b> and
<b>isinstance</b> functions.</p><p>In older versions of Python, the <b>types</b> module destroys
the current exception state when it is first imported.  Avoid
importing the module (or <i>any</i> module that imports it!) from
within an exception handler.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to librarybook index page.">::: librarybook :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
