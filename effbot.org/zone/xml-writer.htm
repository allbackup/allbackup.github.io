<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>SimpleXMLWriter</title></head><body data-page-id="375"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">SimpleXMLWriter</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">Updated October 3, 2004 | Fredrik Lundh</p><p>The <b>SimpleXMLWriter</b> module contains a simple helper class for
applications that need to generate well-formed XML data.</p><p>The current version does not provide built-in support for namespaces.
To create files using namespaces, you currently have to provide &#8220;xmlns&#8221;
attributes and explicitly add prefixes to tags and attributes.</p><h3>Interface</h3><p><b>writer = SimpleXMLWriter.XMLWriter(file, encoding)</b>.  Create a
writer object.  The <b>encoding</b> defaults to &#8220;us-ascii&#8221;, but can also
be set to &#8220;utf-8&#8221;.  You can use other encodings, but in such cases, you
must write the XML header yourself.</p><p><b>writer.start(tag, attributes&#8230;) =&gt; id</b>.  Open a new element.  Attributes can be given as keyword arguments, or as a string/string dictionary.  You can pass in 8-bit strings or Unicode strings; the former
are assumed to use the encoding passed to the constructor.  The method
returns an opaque identifier that can be passed to the <b>close</b> method
to close all open elements up to and including this one.</p><p><b>writer.data(text)</b>.  Add text content to the current element.
You can pass in 8-bit strings or Unicode strings; see above for details.</p><p><b>writer.end()</b>.  Close current element (opened by the most recent
call to <b>start</b>).</p><p><b>writer.end(tag)</b>.  Close current element.  The tag must match
the current element tag.</p><p><b>writer.element(tag, text, attributes&#8230;)</b>.  Add an entire
element.  This is the same as calling <b>start</b>, <b>data</b>, and
<b>end</b> in sequence.  The <b>text</b> argument can be omitted.</p><p><b>writer.close(id)</b>.  Close open elements, up to (and including)
the element identified by the given identifier.  Identifiers are returned
by the <b>start</b> method.</p><p><b>writer.close()</b>.  Close all open elements.</p><h3>Example</h3><p>The following snippet generates a small XHTML document.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> elementtree.SimpleXMLWriter <span class="pykeyword">import</span> XMLWriter
<span class="pykeyword">import</span> sys

w = XMLWriter(sys.stdout)

html = w.start(<span class="pystring">"html"</span>)

w.start(<span class="pystring">"head"</span>)
w.element(<span class="pystring">"title"</span>, <span class="pystring">"my document"</span>)
w.element(<span class="pystring">"meta"</span>, name=<span class="pystring">"generator"</span>, value=<span class="pystring">"my application 1.0"</span>)
w.end()

w.start(<span class="pystring">"body"</span>)
w.element(<span class="pystring">"h1"</span>, <span class="pystring">"this is a heading"</span>)
w.element(<span class="pystring">"p"</span>, <span class="pystring">"this is a paragraph"</span>)

w.start(<span class="pystring">"p"</span>)
w.data(<span class="pystring">"this is "</span>)
w.element(<span class="pystring">"b"</span>, <span class="pystring">"bold"</span>)
w.data(<span class="pystring">" and "</span>)
w.element(<span class="pystring">"i"</span>, <span class="pystring">"italic"</span>)
w.data(<span class="pystring">"."</span>)
w.end(<span class="pystring">"p"</span>)

w.close(html)</pre></div><div class="yui-ge"><div class="yui-u first"><h3>Download</h3><p>The SimpleXMLWriter module is shipped with <a href="element-index.htm">the <b>ElementTree</b> toolkit</a>.  You can get the toolkit from
<a href="/downloads#elementtree">the effbot.org downloads page</a>.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
