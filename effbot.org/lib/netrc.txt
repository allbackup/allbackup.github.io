
@@module netrc

<h1>netrc&#8212;netrc file processing</h1>

<p>New in version 1.5.2.

<p>The {@link netrc} class parses and encapsulates the netrc file format
used by the Unix ftp program and other FTP clients.

@@class netrc([file])

<p>A {@link netrc} instance or subclass instance encapsulates data from
a netrc file. The initialization argument, if present, specifies the
file to parse. If no argument is given, the file .netrc in the user's
home directory will be read. Parse errors will raise {@link
NetrcParseError} with diagnostic information including the file name,
line number, and terminating token.

@@exception NetrcParseError

<p>Exception raised by the {@link netrc} class when syntactical errors
are encountered in source text. Instances of this exception provide
three interesting attributes: {@link msg} is a textual explanation of
the error, {@link filename} is the name of the source file, and {@link
lineno} gives the line number on which the error was found.

@@text 

<h2>netrc Objects</h2>

<p>A {@link netrc} instance has the following methods:

@@method netrc.authenticators(host)

<p>Return a 3-tuple {@code (}{@var login}, {@var account}, {@var
password}) of authenticators for {@var host}. If the netrc file did not
contain an entry for the given host, return the tuple associated with
the `default' entry. If neither matching host nor default entry is
available, return {@code None}.

@@method netrc.__repr__()

<p>Dump the class data as a string in the format of a netrc file. (This
discards comments and may reorder the entries.)

@@text 

<p>Instances of {@link netrc} have public instance variables:

@@attribute netrc.hosts

<p>Dictionary mapping host names to {@code (}{@var login}, {@var
account}, {@var password}) tuples. The `default' entry, if any, is
represented as a pseudo-host by that name.

@@attribute netrc.macros

<p>Dictionary mapping macro names to string lists.

@@text 


<p class='note'><b>Note:</b> Passwords are limited to a subset of the
ASCII character set. Versions of this module prior to 2.3 were extremely
limited. Starting with 2.3, all ASCII punctuation is allowed in
passwords. However, note that whitespace and non-printable characters
are not allowed in passwords. This is a limitation of the way the .netrc
file is parsed and may be removed in the future.
