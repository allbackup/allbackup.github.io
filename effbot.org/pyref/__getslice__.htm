<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>The __getslice__&nbsp;method</title> <script type="text/javascript">effbot_page_id=1826;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <h1 class="maintitle">The __getslice__&nbsp;method</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p><strong>__getslice__</strong>(self, i, j)</p><p><strong>Deprecated since release 2.0.</strong> Support slice objects as parameters
to the <a href="__getitem__.htm"><strong>__getitem__</strong></a> method.</p><p>Called to implement evaluation of <code>self[i:j]</code>.  The returned object
should be of the same type as self.  Note that missing i or j in the
slice expression are replaced by zero or <a href="sys.maxint.htm"><strong>sys.maxint</strong></a>, respectively.
If negative indexes are used in the slice, the length of the sequence
is added to that index.  If the instance does not implement the
<a href="__len__.htm"><strong>__len__</strong></a> method, an <a href="AttributeError.htm"><strong>AttributeError</strong></a> is raised.  No guarantee
is made that indexes adjusted this way are not still negative.
Indexes which are greater than the length of the sequence are not
modified.  If no <a href="__getslice__.htm"><strong>__getslice__</strong></a> is found, a slice object is
created instead, and passed to <a href="__getitem__.htm"><strong>__getitem__</strong></a> instead.</p><p>Notice that the slice methods are only invoked when a single slice
with a single colon is used, and the slice method is available. For
slice operations involving extended slice notation, or in absence of
the slice methods, <a href="__getitem__.htm"><strong>__getitem__</strong></a>, <a href="__setitem__.htm"><strong>__setitem__</strong></a> or
<a href="__delitem__.htm"><strong>__delitem__</strong></a> is called with a slice object as argument.</p><p>The following example demonstrate how to make your program or module
compatible with earlier versions of Python (assuming that methods
<a href="__getitem__.htm"><strong>__getitem__</strong></a>, <a href="__setitem__.htm"><strong>__setitem__</strong></a> and <a href="__delitem__.htm"><strong>__delitem__</strong></a> support
slice objects as arguments):</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide"><span class="pykeyword">class</span> <span class="pyclass">MyClass</span>:
    ...
    <span class="pykeyword">def</span> <span class="pyfunction">__getitem__</span>(self, index):
        ...
    <span class="pykeyword">def</span> <span class="pyfunction">__setitem__</span>(self, index, value):
        ...
    <span class="pykeyword">def</span> <span class="pyfunction">__delitem__</span>(self, index):
        ...

    <span class="pykeyword">if</span> sys.version_info &lt; (2, 0):
        <span class="pycomment"># They won't be defined if version is at least 2.0 final</span>

        <span class="pykeyword">def</span> <span class="pyfunction">__getslice__</span>(self, i, j):
            <span class="pykeyword">return</span> self[max(0, i):max(0, j):]
        <span class="pykeyword">def</span> <span class="pyfunction">__setslice__</span>(self, i, j, seq):
            self[max(0, i):max(0, j):] = seq
        <span class="pykeyword">def</span> <span class="pyfunction">__delslice__</span>(self, i, j):
            <span class="pykeyword">del</span> self[max(0, i):max(0, j):]
    ...</pre></div><div class="yui-ge"><div class="yui-u first"><p>Note the calls to <a href="max.htm"><strong>max</strong></a>; these are necessary because of the handling
of negative indices before the __*slice__() methods are
called. When negative indexes are used, the __*item__() methods
receive them as provided, but the __*slice__() methods get a
&#8220;cooked&#8221; form of the index values. For each negative index value,
the length of the sequence is added to the index before calling the
method (which may still result in a negative index); this is the
customary handling of negative indexes by the built-in sequence types,
and the __*item__() methods are expected to do this as
well. However, since they should already be doing that, negative
indexes cannot be passed in; they must be constrained to the bounds of
the sequence before being passed to the __*item__()
methods. Calling <code>max(0, i)</code> conveniently returns the proper value.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div> <!-- yui-g --></div> <!-- content --> </div> <!-- yui-b --> </div> <!-- yui-main --> <div class="yui-b"> <div id='menu'> <ul> <li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li> <li><b><a href="." title="Go to pyref index page.">::: pyref :::</a></b></li> </ul> </div> <!-- menu --> </div> <!-- yui-b --> </div> <!-- bd --> <div id="ft"> <!-- footer --> <p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;"></a>
this page was rendered by a <a href="http://www.djangoproject.com/">django</a> application in 0.02s 2011-06-21 21:01:17.829357.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p> </div> <!-- ft --> </div> <!-- doc --> <script src="/media/js/effbot-min.js" type="text/javascript"> </script> </body> </html>
