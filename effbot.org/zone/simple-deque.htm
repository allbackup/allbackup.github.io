<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Simple Deque&nbsp;Class</title></head><body data-page-id="265"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Simple Deque&nbsp;Class</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">November 29, 1997 | Fredrik Lundh</p><p>The <b>Deque</b> class (double-ended queue) is a variant of
<a href="simple-stack.htm">Stack</a> that allows you to add and
remove items at either end.  It also provides a <b>__getitem__</b>
method that allows you to access any item in the list.</p><p>Note that this class uses a Python list as the underlying data
structure, which means that operations at the &#8220;left end&#8221; of the queue
isn&#8217;t quite as efficient as they could be, especially for larger
queues.</p><div class="example">
<b>Example: The Deque implementation (for Python 1.5.2 and later)</b>
<pre class="python">
<span class="pykeyword">class</span> <span class="pyclass">Deque</span>:

    <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self):
        self.list = []

    <span class="pykeyword">def</span> <span class="pyfunction">__len__</span>(self):
        <span class="pykeyword">return</span> len(self.list)

    <span class="pykeyword">def</span> <span class="pyfunction">__getitem__</span>(self, index):
        <span class="pykeyword">return</span> self.list[index]

    <span class="pykeyword">def</span> <span class="pyfunction">putfront</span>(self, item):
        self.list.insert(0, item)

    <span class="pykeyword">def</span> <span class="pyfunction">getfront</span>(self):
        <span class="pykeyword">return</span> self.list.pop(0)

    <span class="pykeyword">def</span> <span class="pyfunction">putback</span>(self, item):
        self.list.append(item)

    <span class="pykeyword">def</span> <span class="pyfunction">getback</span>(self):
        <span class="pykeyword">return</span> self.list.pop() <span class="pycomment"># default is last</span></pre></div></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
