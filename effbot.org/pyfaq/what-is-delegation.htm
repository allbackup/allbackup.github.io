<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>What is&nbsp;delegation?</title></head><body data-page-id="904"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">What is&nbsp;delegation?</h1></div><div class="yui-ge"><div class="yui-u first"><p>Delegation is an object oriented technique (also called a design
pattern) where certain operations on one object are automatically
applied to another, usually contained, object.</p><p>Let&#8217;s say you have an object <em>x</em> and want to change the behaviour of
just one of its methods.  To solve this, you can create a new class
that contains <em>x</em>, provides a new implementation of the method you&#8217;re
interested in changing, and delegates all other methods to the
corresponding method of <em>x</em>.</p><p>Delegation is easy in Python.  For example, here&#8217;s a simple class that
behaves like a file but converts all written data to uppercase:</p><pre class="python"><span class="pykeyword">class</span> <span class="pyclass">UpperOut</span>:
      <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self, outfile):
            self._outfile = outfile
      <span class="pykeyword">def</span> <span class="pyfunction">write</span>(self, s):
            self._outfile.write(s.upper())
      <span class="pykeyword">def</span> <span class="pyfunction">__getattr__</span>(self, name):
            <span class="pykeyword">return</span> getattr(self._outfile, name)</pre><p>The UpperOut class adds a write() method that converts the argument
string to uppercase, before calling the corresponding method on the
self._outfile object.  All other methods are delegated directly to
the self._outfile object, via the <a href="/pyref/__getattr__.htm"><strong>__getattr__</strong></a> method.</p><p>See
<s><a href="http://docs.python.org/ref/attribute-access">the language reference</a></s> (dead link)
for more information about controlling attribute access.</p><p>Note that for more general cases delegation can get trickier.  When
attributes must be set as well as retrieved, the class must define a
<a href="/pyref/__setattr__.htm"><strong>__setattr__</strong></a> method too, and it must do so carefully.
The basic implementation of <a href="/pyref/__setattr__.htm"><strong>__setattr__</strong></a> is roughly
equivalent to the following:</p><pre class="python"><span class="pykeyword">class</span> <span class="pyclass">X</span>:
     ...
     <span class="pykeyword">def</span> <span class="pyfunction">__setattr__</span>(self, name, value):
          self.__dict__[name] = value
     ...</pre><p>Note that most <a href="/pyref/__setattr__.htm"><strong>__setattr__</strong></a> implementations must modify
the objects <a href="/pyref/__dict__.htm"><strong>__dict__</strong></a> attribute directly to store local
state for self without causing an infinite recursion.</p><p>CATEGORY: programming</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
