<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>Whetting Your&nbsp;Appetite</title> <script type="text/javascript">effbot_page_id=1910;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> <!--
<p style='color: #8f8f8f; background: #fff5bf; padding: 5px 10px;'> <b>2008-07-15:</b> Selected articles

now have experimental "comment" links in the left column and at the bottom.
You're welcome to use them for commenting and voting on articles.
For a bit more on this, see <a
href="http://effbot.slinkset.com/links/Welcome_to_discuss_effbot_org">this
page</a>. /F
</p>
--> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <h1 class="maintitle">Whetting Your&nbsp;Appetite</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p>COMMENT: <a href="http://docs.python.org/tut/node3.html">Original Source</a></p><p>Whether you are:</p><ul><li>a student eager to learn a new programming language,</li><li>an experienced software developer looking for more productivity in your next project,</li><li>a domain specialist using computers to help you solve complex numerical or scientific problems, or</li><li>a home user looking for ways to automate routine tasks,</li></ul><p>Python has something for you!</p><p>If you do much work on computers, you eventually find that there&#8217;s some task you&#8217;d like to automate. For example, you may wish to:</p><ul><li>perform a search-and-replace over a large number of text files</li><li>rename and rearrange a bunch of photo files in a complicated way</li><li>write a small custom database, or a specialized GUI application, or a simple game</li></ul><p>If you&#8217;re a professional software developer working with several C/C++/Java/C# libraries, you might find that:</p><ul><li>the usual write/compile/test/re-compile cycle slows you down</li><li>you need an quick way to prototype and refine your algorithm, before you spend a lot of time implementing it</li><li>you&#8217;re writing a test suite for a library and find writing the testing code a tedious task</li><li>you&#8217;ve written a program that could use an extension language, and you don&#8217;t want to design and implement a whole new language for your application</li></ul><p>Python is just the language for you.</p><p>You could write a Unix shell script or Windows batch files for some of these tasks, but shell scripts are best at moving around files and changing text data, not well-suited for GUI applications or games. You could write a C/C++/Java program, but it can take a lot of development time to get even a first-draft program. Python is simpler to use, available on Windows, MacOS X, and Unix operating systems, and will help you get the job done more quickly.</p><p>Python is easy to use, but it is a powerful programming language, offering much more structure and support for large programs than shell scripts or batch files can offer. On the other hand, Python also offers much more error checking than C, and, being a <em>very-high-level language</em>, it has high-level data types built in, such as flexible arrays and dictionaries. Because of its more general data types Python is applicable to a much larger problem domain than Awk or even Perl, yet many things are at least as easy in Python as in those languages.</p><p>Python enables you to split your program into modules that can be reused in other Python programs. It comes with a large collection of standard modules that you can use as the basis of your programs &#8212; or as examples to start learning to program in Python. Some of these modules provide things like file I/O, system calls, sockets, and even interfaces to graphical user interface toolkits like Tk.</p><p>Python is an interpreted language, which can save you considerable time during program development because no compilation and linking is necessary. The interpreter can be used interactively, which makes it easy to experiment with features of the language, to write throw-away programs, or to test functions during bottom-up program development. It is also a handy desk calculator.</p><p>Python enables programs to be written compactly and readably. Programs written in Python are typically much shorter than equivalent C, C++, or Java programs, for several reasons:</p><ul><li>the high-level data types allow you to express complex operations in a single statement</li><li>statement grouping is done by indentation instead of beginning and ending brackets</li><li>no variable or argument type declarations are necessary</li></ul><p>Python is <em>extensible</em>: if you know how to program in C it is easy to add a new built-in function or module to the interpreter, either to perform critical operations at maximum speed, or to link Python programs to libraries that may only be available in binary form (such as a vendor-specific graphics library). Once you are really hooked, you can link the Python interpreter into an application written in C and use it as an extension or command language for that application.</p><p>By the way, the language is named after the BBC show <q>Monty Python&#8217;s Flying Circus</q> and has nothing to do with nasty reptiles. Making references to Monty Python skits in documentation is not only allowed, it is encouraged!</p><p>In the next chapter, the mechanics of using the interpreter are explained. This is rather mundane information, but essential for trying out the examples shown later.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><div class='comment'>
<p><b>Comment:</b></p>
<p>
I added bullets at the top to make a wide range of prospects feel welcome (4 bullet points). I've also changed the introductory paragraphs to avoid intimidating gobs and gobs to text and present information in bullet points. Hope you like it!</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/04487'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
This introduction makes the fundamental mistake of assuming the reader is an experienced programmer. Omitting the first two paragraphs and the first sentence of the third removes very little value and makes the opening more accessible to noobs. Clearly the rest needs work, and the gist of the opening can be added back in later (in a friendlier way) but that one change makes the document a bit more inviting. I'm betting that text is at least twelve years old ...</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/3p8r'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
I would really like to contribute to this project. I am not a python guru. It gives me additional experience how non-experts can feel (and try to understand) some thigs which are obvious for gurus :-)

IMHO it would be helpful to imagine who is intendend audience:

- Alex, 15 years old programmer wannabe with no experience in learning programming languages (python is his first), coding or even problem-solving beyond middle-school science project? He is very smart in math, likes PC games, is visual (not excited about command line) but likes simple projects which are "fun". Don't try to inflict object programming on him yet.

- Dave, experienced carcer researcher with medical degree? He uses his PC or Mac daily to do "wet lab" experiments for weeks (no programming), then he returns to programming to compare results with another study, which has similar data in another format. He needs quickly to whip up a script to compare them somehow, and get annotations from national database. Maybe to run stats using RPy.

- Tony, application developer with 10 years of experience in couple of languages, like java, C, SQL, Visual Basic, maybe some perl. He is developing a web frontend for department database (maybe even for Dave), or web services to talk to another department's java XML.

Every one of them has different priorities, and tutorial needs be customized to "connect". IMHO, YMMV.

</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/3rg2'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
You're right.  I thought that version had been backported, but it sure doesn't look that way.  Oh well, guess I have some merging to do.

**Later:** I've replaced this with the version from the 2.5 trunk.</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/3s5m/_comments/3s6r'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
The in-development version of this is better and more accessible to noobs.

http://docs.python.org/dev/tut/node3.html</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/3s5m'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
Perhaps there should be two introductory chapters; one for those new to programming, and a second for those coming from another language, with a note at the top to skip it if the reader is new to programming? [pleac.sourceforge.net might be a useful link for the second chapter]</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/417h'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
Updated first bullet from "a student eager to learn programming" to "a student eager to learn a new programming language". This tutorial does not teach programming, so the new wording is better, IMO.</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/456b'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
The "recent comments" list is created by an offsite script, so I can tweak the format if necessary, but adding some cookie-based "highlight new comments" mechanism would require a bit of JavaScript hacking (volunteers are welcome!).</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/4g7b/_comments/4glw'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
Is there a way to search for 'comments added since you last visited'?  I cannot seem to find any.</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/4g7b'>infogami</a></b></p>
</div>

<div class='comment'>
<p><b>Comment:</b></p>
<p>
"Mistake" misspelled as "MAISTAKE"...

This introduction makes the fundamental MAISTAKE of assuming...</p>
<p>Posted by <b class='author'><a href='http://pytut.infogami.com/node3.html/_comments/4gg2'>infogami</a></b></p>
</div>
</div> <!-- yui-g --></div> <!-- content --> </div> <!-- yui-b --> </div> <!-- yui-main --> <div class="yui-b"> <div id='menu'> <ul> <li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li> <li><b><a href="." title="Go to pytut index page.">::: pytut :::</a></b></li> </ul> </div> <!-- menu --> </div> <!-- yui-b --> </div> <!-- bd --> <div id="ft"> <!-- footer --> <p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15_grey.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;"></a>
this page was rendered by a <a href="http://www.djangoproject.com/">django</a> application in 0.02s 2009-05-05 16:03:46.155016.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p> </div> <!-- ft --> </div> <!-- doc --> <script src="/media/js/effbot-min.js" type="text/javascript"> </script> </body> </html>
