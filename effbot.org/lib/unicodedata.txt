
@@module unicodedata

<h1>unicodedata&#8212;Unicode Database</h1>

<p>This module provides access to the Unicode Character Database which
defines character properties for all Unicode characters. The data in
this database is based on the UnicodeData.txt file version 3.2.0 which
is publically available from {@link ftp://ftp.unicode.org/}.

<p>The module uses the same names and symbols as defined by the
UnicodeData File Format 3.2.0 (see {@link
http://www.unicode.org/Public/UNIDATA/UnicodeData.html}). It defines the
following functions:

@@function lookup(name)

<p>Look up character by name. If a character with the given name is
found, return the corresponding Unicode character. If not found, {@link
exceptions.KeyError} is raised.

@@function name(unichr[, default])

<p>Returns the name assigned to the Unicode character {@var unichr} as a
string. If no name is defined, {@var default} is returned, or, if not
given, {@link exceptions.ValueError} is raised.

@@function decimal(unichr[, default])

<p>Returns the decimal value assigned to the Unicode character {@var
unichr} as integer. If no such value is defined, {@var default} is
returned, or, if not given, {@link exceptions.ValueError} is raised.

@@function digit(unichr[, default])

<p>Returns the digit value assigned to the Unicode character {@var
unichr} as integer. If no such value is defined, {@var default} is
returned, or, if not given, {@link exceptions.ValueError} is raised.

@@function numeric(unichr[, default])

<p>Returns the numeric value assigned to the Unicode character {@var
unichr} as float. If no such value is defined, {@var default} is
returned, or, if not given, {@link exceptions.ValueError} is raised.

@@function category(unichr)

<p>Returns the general category assigned to the Unicode character {@var
unichr} as string.

@@function bidirectional(unichr)

<p>Returns the bidirectional category assigned to the Unicode character
{@var unichr} as string. If no such value is defined, an empty string is
returned.

@@function combining(unichr)

<p>Returns the canonical combining class assigned to the Unicode
character {@var unichr} as integer. Returns {@code 0} if no combining
class is defined.

@@function east_asian_width(unichr)

<p>Returns the east asian width assigned to the Unicode character {@var
unichr} as string.
<blockquote>
@since New in
version 2.4. <br />
</blockquote>

@@function mirrored(unichr)

<p>Returns the mirrored property assigned to the Unicode character {@var
unichr} as integer. Returns {@code 1} if the character has been
identified as a &#8220;mirrored&#8221; character in bidirectional text,
{@code 0} otherwise.

@@function decomposition(unichr)

<p>Returns the character decomposition mapping assigned to the Unicode
character {@var unichr} as string. An empty string is returned in case
no such mapping is defined.

@@function normalize(form, unistr)

<p>Return the normal form {@var form} for the Unicode string {@var
unistr}. Valid values for {@var form} are 'NFC', 'NFKC', 'NFD', and
'NFKD'.

<p>The Unicode standard defines various normalization forms of a Unicode
string, based on the definition of canonical equivalence and
compatibility equivalence. In Unicode, several characters can be
expressed in various way. For example, the character U+00C7 (LATIN
CAPITAL LETTER C WITH CEDILLA) can also be expressed as the sequence
U+0043 (LATIN CAPITAL LETTER C) U+0327 (COMBINING CEDILLA).

<p>For each character, there are two normal forms: normal form C and
normal form D. Normal form D (NFD) is also known as canonical
decomposition, and translates each character into its decomposed form.
Normal form C (NFC) first applies a canonical decomposition, then
composes pre-combined characters again.

<p>In addition to these two forms, there two additional normal forms
based on compatibility equivalence. In Unicode, certain characters are
supported which normally would be unified with other characters. For
example, U+2160 (ROMAN NUMERAL ONE) is really the same thing as U+0049
(LATIN CAPITAL LETTER I). However, it is supported in Unicode for
compatibility with existing character sets (e.g. gb2312).

<p>The normal form KD (NFKD) will apply the compatibility decomposition,
i.e. replace all compatibility characters with their equivalents. The
normal form KC (NFKC) first applies the compatibility decomposition,
followed by the canonical composition.
<blockquote>
@since New in version 2.3. <br />
</blockquote>

@@text 

<p>In addition, the module exposes the following constant:

@@variable unidata_version

<p>The version of the Unicode database used in this module.
<blockquote>
@since New in version 2.3. <br />
</blockquote>
