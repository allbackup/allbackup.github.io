<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>The tabnanny&nbsp;module</title></head><body data-page-id="678"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">The tabnanny&nbsp;module</h1></div><div class="yui-ge"><div class="yui-u first"><p>(New in 2.0) This module checks Python source files for ambigous
indentation. If a file mixes tabs and spaces in a way that the
indentation isn&#8217;t clear, no matter what tab size you&#8217;re using, the
nanny complains.</p><p>In the <b>badtabs.py</b> file used in the following examples,
the first line after the <b>if</b> statement uses four spaces
followed by a tab. The second uses spaces only.</p><pre format="LINESPECIFIC">
$ tabnanny.py -v samples/badtabs.py
'samples/badtabs.py': *** Line 3: trouble in tab city! ***
offending line: '        print "world"\012'
indent not equal e.g. at tab sizes 1, 2, 3, 5, 6, 7, 9
</pre><p>Since the Python interpreter interprets a tab as eight spaces,
the script will run correctly. It will also display correctly, in
any editor that assumes that a tab is either eight or four spaces.
That&#8217;s not enough to fool the tab nanny, of course&#8230;</p><p>You can also use <b>tabnanny</b> from your own programs.</p><div class="example">
<b style="example">Example: Using the tabnanny
module</b>
<pre>
# File: <a href="tabnanny/tabnanny-example-1.py">tabnanny-example-1.py</a>

import tabnanny

FILE = "samples/badtabs.py"

file = open(FILE)
for line in file.readlines():
    print repr(line)

# let tabnanny look at it
tabnanny.check(FILE)

</pre><pre class="computeroutput" moreinfo="NONE">
$ python tabnanny-example-1.py
'if 1:\012'
'    \011print "hello"\012'
'        print "world"\012'
samples/badtabs.py 3 '        print "world"\012'
</pre></div><p>To capture the output, you can redirect <b>sys.stdout</b> to
a <b><a href="stringio.htm">StringIO</a></b> object.</p><pre>
import tabnanny
import StringIO, sys

FILE = "samples/badtabs.py"

stdout = sys.stdout
try:
    sys.stdout = StringIO.StringIO()
    tabnanny.check(FILE)
    output = sys.stdout.getvalue()
finally:
    sys.stdout = stdout

if output:
    print "***", "tab problems in", FILE
    print output
</pre></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to librarybook index page.">::: librarybook :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
