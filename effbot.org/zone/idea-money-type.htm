<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Idea: Adding a Money Base&nbsp;Type</title></head><body data-page-id="125"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Idea: Adding a Money Base&nbsp;Type</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">February 8, 2002 | Fredrik Lundh</p><p>I propose adding an &#8220;abstract&#8221; base type for money
objects, which can be subclassed by actual implementations.</p><p>The base type allows the user to use <b>isinstance</b> to identify an
object as a money object, and convert the money value to an integer, a
floating point value, or a well-formed string.</p><p>The goal is not to standardize any behaviour beyond this; anything
else should be provided by implementation subtypes.</p><h2>The Base Type</h2><p>The <b>basemoney</b> type provides a minimal interface, with five
standard methods.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">class</span> <span class="pyclass">basemoney</span>(object):

    <span class="pykeyword">def</span> <span class="pyfunction">__str__</span>(self):
       <span class="pycomment"># return the money value, as a string that should</span>
       <span class="pycomment"># match the regular pattern "[+|-]?\d+(.\d+)?"</span>
       <span class="pycomment"># use trailing zeros to indicate precision</span>

    <span class="pykeyword">def</span> <span class="pyfunction">__int__</span>(self):
       <span class="pycomment"># convert money value to an integer.  may return a</span>
       <span class="pycomment"># long integer, if necessary</span>

    <span class="pykeyword">def</span> <span class="pyfunction">__float__</span>(self):
       <span class="pycomment"># convert money value to a float.</span>

    <span class="pykeyword">def</span> <span class="pyfunction">__hash__</span>(self):
       <span class="pycomment"># return hash value.  could be defined as hash(str(self))</span>

    <span class="pykeyword">def</span> <span class="pyfunction">__cmp__</span>(self, other):
       <span class="pycomment"># compare two money values</span></pre></div><div class="yui-ge"><div class="yui-u first"><p>Note that <b>int()</b> and <b>float()</b> might be inexact.</p><h2>Questions</h2><p>None, this far.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
