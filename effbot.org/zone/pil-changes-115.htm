<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Changes in Python Imaging Library&nbsp;1.1.5</title></head><body data-page-id="179"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Changes in Python Imaging Library&nbsp;1.1.5</h1></div><div class="yui-ge"><div class="yui-u first"><p class="note"><b>Update 2005-03-28:</b> Python Imaging Library 1.1.5
is out!  You can get it directly from
<a href="/downloads#imaging">effbot.org</a>.</p><p>Welcome to <a href="/">effbot.org</a>!</p><p>PIL 1.1.5 is available in the
<a href="/downloads#imaging">effbot.org downloads section</a>.</p><p>Also see: <a href="pil-errata-114.htm"><cite>Errata for Python Imaging Library 1.1.4</cite></a> and <a href="pil-changes-116.htm"><cite>Changes
in Python Imaging Library 1.1.6</cite></a>.</p><h3>Changes from release 1.1.4 to 1.1.5</h3><p><i>(1.1.5 released)</i></p><ul><li>Added documentation pages to the source distribution (based on
<a href="pythondoc.htm">PythonDoc</a> markup).  See Docs/index.html.

</li></ul><p><i>(1.1.5c2 released)</i></p><ul><li>Added experimental PERSPECTIVE transform method (from Jeff Breidenbach).

</li></ul><p><i>(1.1.5c1 released)</i></p><ul><li>Make sure &#8220;thumbnail&#8221; never generates zero-wide or zero-high images
(reported by Gene Skonicki)

</li><li>Fixed a &#8220;getcolors&#8221; bug that could result in a zero count for some
  colors, especially with low maxcolors settings (reported by Richard
  Oudkerk).

</li><li>Changed default &#8220;convert&#8221; palette to avoid &#8220;rounding errors&#8221; when
  round-tripping white source pixels (reported by Henryk Gerlach and
  Jeff Epler).

</li></ul><p><i>(1.1.5b3 released)</i></p><ul><li>Don&#8217;t crash in &#8220;quantize&#8221; method if the number of colors requested
  is larger than 256.  This release raises a ValueError exception;
  future versions may return a mode &#8220;RGB&#8221; image instead (reported
  by Richard Oudkerk).

</li><li>Added WBMP read/write support (based on code by Duncan Booth).

</li></ul><p><i>(1.1.5b2 released)</i></p><ul><li>Added DPI read/write support to the PNG codec.  The decoder sets
  the info[&#8220;dpi&#8221;] attribute for PNG files with appropriate resolution
  settings.  The encoder uses the &#8220;dpi&#8221; option (based on code by Niki
  Spahiev).

</li><li>Added limited support for &#8220;point&#8221; mappings from mode &#8220;I&#8221; to mode &#8220;L&#8221;.
  Only 16-bit values are supported (other values are clipped), the lookup
  table must contain exactly 65536 entries, and the mode argument must be
  set to &#8220;L&#8221;.

</li><li>Added support for Mac OS X icns files (based on code by Bob Ippolito).

</li><li>Added &#8220;ModeFilter&#8221; support to the ImageFilter module.

</li><li>Added support for Spider images (from William Baxter).  See the
  comments in PIL/SpiderImagePlugin.py for more information on this
  format.

</li></ul><p><i>(1.1.5b1 released)</i></p><ul><li>Added new Sane release (from Ralph Heinkel).  See the Sane/README
  and Sane/CHANGES files for more information.

</li><li>Added experimental PngInfo chunk container to the PngImageFile
  module.  This can be used to add arbitrary chunks to a PNG file.
  Create a PngInfo instance, use &#8220;add&#8221; or &#8220;add_text&#8221; to add chunks,
  and pass the instance as the &#8220;pnginfo&#8221; option when saving the
  file.

</li><li>Added &#8220;getpalette&#8221; method.  This returns the palette as a list,
  or None if the image has no palette.  To modify the palette, use
  &#8220;getpalette&#8221; to fetch the current palette, modify the list, and
  put it back using &#8220;putpalette&#8221;.

</li><li>Added optional flattening to the ImagePath &#8220;tolist&#8221; method.
  tolist() or tolist(0) returns a list of 2-tuples, as before.
  tolist(1) returns a flattened list instead.

</li></ul><p><i>(1.1.5a5 released)</i></p><ul><li>Fixed BILINEAR/BICUBIC/ANTIALIAS filtering for mode &#8220;LA&#8221;.

</li><li>Added &#8220;getcolors()&#8221; method.  This is similar to the existing histogram
  method, but looks at color values instead of individual layers,
  and returns an unsorted list of (count, color) tuples.

<br />By default, the method returns None if finds more than 256 colors.
  If you need to look for more colors, you can pass in a limit (this
  is used to allocate internal tables, so you probably don&#8217;t want to
  pass in too large values).

</li></ul><p><i>(1.1.5a4 released)</i></p><ul><li>The &#8220;save&#8221; method now looks for a file format driver <i>before</i>
  creating the file.

</li><li>Don&#8217;t use antialiased truetype fonts when drawing in mode P, I,
  and F images.

</li><li>Rewrote the &#8220;setup.py&#8221; file.  The new version scans for available
  support libraries, and configures both the libImaging core library
  and the bindings in one step.

<br />To use specific versions of the libraries, edit the ROOT variables
  in the setup.py file.

</li><li>Removed threaded &#8220;show&#8221; viewer; use the old &#8220;show&#8221; implementation
  instead.  (Windows).

</li><li>Added deprecation warnings to Image.offset, ImageDraw.setink, and
  ImageDraw.setfill.

</li><li>Added width option to ImageDraw.line().  The current implementation
  works best for straight lines; it does not support line joins, so
  polylines won&#8217;t look good.

</li><li>ImageDraw.Draw is now a factory function instead of a class.  If
  you need to create custom draw classes, inherit from the ImageDraw
  class.    All other code should use the factory function.

</li><li>Fixed loading of certain PCX files (problem reported by Greg
  Hamilton, who also provided samples).

</li><li>Changed _imagingft.c to require FreeType 2.1 or newer.  The
  module can still be built with earlier versions; see comments
  in _imagingft.c for details.

</li></ul><p><i>(1.1.5a3 released)</i></p><ul><li>Added &#8216;getim&#8217; method, which returns a PyCObject wrapping an
  Imaging pointer.  The description string is set to IMAGING_MAGIC.
  See Imaging.h for pointer and string declarations.

</li><li>Fixed reading of TIFF JPEG images (problem reported by Ulrik
  Svensson).

</li><li>Made ImageColor work under Python 1.5.2

</li><li>Fixed division by zero &#8220;equalize&#8221; on very small images (from
  Douglas Bagnall).

</li></ul><p><i>(1.1.5a2 released)</i></p><ul><li>The &#8220;paste&#8221; method now supports the alternative &#8220;paste(im, mask)&#8221;
  syntax (in this case, the box defaults to im&#8217;s bounding box).

</li><li>The &#8220;ImageFile.Parser&#8221; class now works also for PNG files with
  more than one IDAT block.

</li><li>Added DPI read/write to the TIFF codec, and fixed writing of
  rational values.  The decoder sets the info[&#8220;dpi&#8221;] attribute
  for TIFF files with appropriate resolution settings.  The
  encoder uses the &#8220;dpi&#8221; option.

</li><li>Disable interlacing for small (or narrow) GIF images, to
  work around what appears to be a hard-to-find bug in PIL&#8217;s
  GIF encoder.

</li><li>Fixed writing of mode &#8220;P&#8221; PDF images.  Made mode &#8220;1&#8221; PDF
  images smaller.

</li><li>Made the XBM reader a bit more robust; the file may now start
  with a few whitespace characters.

</li><li>Added support for enhanced metafiles to the WMF driver.  The
  separate PILWMF kit lets you render both placeable WMF files
  and EMF files as raster images.  See <a href="http://effbot.org/downloads#pilwmf">http://effbot.org/downloads#pilwmf</a>.

</li></ul><p><i>(1.1.5a1 released)</i></p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><ul class="wide"><li>Replaced broken WMF driver with a WMF stub plugin (see below).

</li><li>Fixed writing of 1, L, and CMYK PDF images (based on input from
  Nicholas Riley and others).

</li><li>Fixed adaptive palette conversion for zero-width or zero-height
  images (from Chris Cogdon)

</li><li>Fixed reading of PNG images from QuickTime 6 (from Paul Pharr)

</li><li>Added support for StubImageFile plugins, including stub plugins
  for BUFR, FITS, GRIB, and HDF5 files.  A stub plugin can identify
  a given file format, but relies on application code to open and
  save files in that format.

</li><li>Added optional &#8220;encoding&#8221; argument to the ImageFont.truetype
  factory.  This argument can be used to specify non-Unicode character
  maps for fonts that support that.  For example, to draw text using
  the Microsoft Symbol font, use:

<pre class="wide">
font = ImageFont.truetype("symbol.ttf", 16, encoding="symb")
draw.text((0, 0), unichr(0xF000 + 0xAA))
</pre>

(note that the symbol font uses characters in the 0xF000-0xF0FF
   range)

<br />Common encodings are &#8220;unic&#8221; (Unicode), &#8220;symb&#8221; (Microsoft Symbol),
  &#8220;ADOB&#8221; (Adobe Standard), &#8220;ADBE&#8221; (Adobe Expert), and &#8220;armn&#8221; (Apple
  Roman).  See the FreeType documentation for more information.

</li><li>Made &#8220;putalpha&#8221; a bit more robust; you can now attach an alpha
  layer to a plain &#8220;L&#8221; or &#8220;RGB&#8221; image, and you can also specify
  constant alphas instead of alpha layers (using integers or colour
  names).

</li><li>Added experimental &#8220;LA&#8221; mode support.

<br />An &#8220;LA&#8221; image is an &#8220;L&#8221; image with an attached transparency layer.
  Note that support for &#8220;LA&#8221; is not complete; some operations may
  fail or produce unexpected results.

</li><li>Added &#8220;RankFilter&#8221;, &#8220;MinFilter&#8221;, &#8220;MedianFilter&#8221;, and &#8220;MaxFilter&#8221;
  classes to the ImageFilter module.

</li><li>Improved support for applications using multiple threads; PIL
  now releases the global interpreter lock for many CPU-intensive
  operations (based on work by Kevin Cazabon).

</li><li>Ignore Unicode characters in the PCF loader (from Andres Polit)

</li><li>Fixed typo in OleFileIO.loadfat, which could affect loading of
  FlashPix and Image Composer images (Daniel Haertle)

</li><li>Fixed building on platforms that have Freetype but don&#8217;t have
  Tcl/Tk (Jack Jansen, Luciano Nocera, Piet van Oostrum and others)

</li><li>Added EXIF GPSInfo read support for JPEG files.  To extract
  GPSInfo information, open the file, extract the exif dictionary,
  and check for the key 0x8825 (GPSInfo).  If present, it contains
  a dictionary mapping GPS keys to GPS values.  For a list of keys,
  see the EXIF specification.

<br />The &#8220;ExifTags&#8221; module contains a GPSTAGS dictionary mapping GPS
  tags to tag names.

</li><li>Added DPI read support to the PCX and DCX codecs (info[&#8220;dpi&#8221;]).

</li><li>The &#8220;show&#8221; methods now uses a built-in image viewer on Windows.
  This viewer creates an instance of the ImageWindow class (see
  below) and keeps it running in a separate thread.

</li><li>Added experimental &#8220;Window&#8221; and &#8220;ImageWindow&#8221; classes to the
  ImageWin module.  These classes allow you to create a WCK-style
  toplevel window, and use it to display raster data.

</li><li>Fixed some Python 1.5.2 issues (to build under 1.5.2, use the
  Makefile.pre.in/Setup.in approach)

</li><li>Added support for the TIFF FillOrder tag.  PIL can read mode &#8220;1&#8221;,
  &#8220;L&#8221;, &#8220;P&#8221; and &#8220;RGB&#8221; images with non-standard FillOrder (based on
  input from Jeff Breidenbach).

</li></ul></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
