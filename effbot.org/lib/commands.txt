
@@module commands

<h1>commands&#8212;Utilities for running commands</h1>

<p>Availability: Unix.

<p>The {@link commands} module contains wrapper functions for {@link
os.popen} which take a system command as a string and return any output
generated by the command and, optionally, the exit status.

<p>The {@link commands} module defines the following functions:

@@function getstatusoutput(cmd)

<p>Execute the string {@var cmd} in a shell with {@link os.popen} and
return a 2-tuple {@code (}{@var status}, {@var output}). {@var cmd} is
actually run as {@code { }{@var cmd} ; } 2>&amp;1, so that the returned
output will contain output or error messages. A trailing newline is
stripped from the output. The exit status for the command can be
interpreted according to the rules for the C function {@link c:wait}.

@@function getoutput(cmd)

<p>Like {@link getstatusoutput}, except the exit status is ignored and
the return value is a string containing the command's output.

@@function getstatus(file)

<p>Return the output of "{@code ls -ld }{@var file}" as a string. This
function uses the {@link getoutput} function, and properly escapes
backslashes and dollar signs in the argument.

@@text 

<p>Example:

<pre>
&gt;&gt;&gt; import commands
&gt;&gt;&gt; commands.getstatusoutput('ls /bin/ls')
(0, '/bin/ls')
&gt;&gt;&gt; commands.getstatusoutput('cat /bin/junk')
(256, 'cat: /bin/junk: No such file or directory')
&gt;&gt;&gt; commands.getstatusoutput('/bin/junk')
(256, 'sh: /bin/junk: not found')
&gt;&gt;&gt; commands.getoutput('ls /bin/ls')
'/bin/ls'
&gt;&gt;&gt; commands.getstatus('/bin/ls')
'-rwxr-xr-x  1 root        13352 Oct 14  1994 /bin/ls'
</pre>

