
@@module cStringIO

<h1>cStringIO&#8212;Faster version of StringIO</h1>

<p>The module {@link cStringIO} provides an interface similar to that of
the {@link StringIO} module. Heavy use of {@link StringIO.StringIO}
objects can be made more efficient by using the function {@link
StringIO} from this module instead.

<p>Since this module provides a factory function which returns objects
of built-in types, there's no way to build your own version using
subclassing. Use the original {@link StringIO} module in that case.

<p>Unlike the memory files implemented by the {@link StringIO} module,
those provided by this module are not able to accept Unicode strings
that cannot be encoded as plain ASCII strings.

<p>Another difference from the {@link StringIO} module is that calling
{@link StringIO} with a string parameter creates a read-only object.
Unlike an object created without a string parameter, it does not have
write methods. These objects are not generally visible. They turn up in
tracebacks as {@link StringI} and {@link StringO}.

<p>The following data objects are provided as well:

@@variable InputType

<p>The type object of the objects created by calling {@link StringIO}
with a string parameter.

@@variable OutputType

<p>The type object of the objects returned by calling {@link StringIO}
with no parameters.

@@text 

<p>There is a C API to the module as well; refer to the module source
for more information.
