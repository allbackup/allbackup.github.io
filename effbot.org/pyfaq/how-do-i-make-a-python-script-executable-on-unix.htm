<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>How do I make a Python script executable on&nbsp;Unix?</title></head><body data-page-id="808"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">How do I make a Python script executable on&nbsp;Unix?</h1></div><div class="yui-ge"><div class="yui-u first"><p>You need to do two things: the script file&#8217;s mode must be executable and the first line must begin with #! followed by the path of the Python interpreter.</p><p>The first is done by executing &#8220;chmod +x scriptfile&#8221; or perhaps &#8220;chmod 755 scriptfile.</p><pre><code>$ chmod +x myscript.py
</code></pre><p>The second can be done in a number of ways. The most straightforward way is to put</p><pre class="python"><span class="pycomment">#!/usr/local/bin/python</span></pre><p>as the very first line of your file, using the pathname for where the Python interpreter is installed on your platform.</p><p>If you would like the script to be independent of where the Python interpreter lives, you can use the &#8220;env&#8221; program. Almost all Unix variants support the following, assuming the python interpreter is in a directory on the user&#8217;s $PATH:</p><pre class="python"><span class="pycomment">#! /usr/bin/env python</span></pre><p><em>Don&#8217;t</em> do this for CGI scripts. The $PATH variable for CGI scripts is often very minimal, so you need to use the actual absolute pathname of the interpreter.</p><p>Occasionally, a user&#8217;s environment is so full that the /usr/bin/env program fails; or there&#8217;s no env program at all. In that case, you can try the following hack (due to Alex Rezinsky):</p><pre class="python"><span class="pycomment">#! /bin/sh</span>
<span class="pystring">""":"</span>
exec python $0 ${1+"$@"}
"""</pre><p>The minor disadvantage is that this defines the script&#8217;s __doc__ string. However, you can fix that by adding</p><pre class="python">__doc__ = <span class="pystring">"""...Whatever..."""</span></pre><p>CATEGORY: library</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
