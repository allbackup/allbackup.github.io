
@@module py_compile

<h1>py_compile&#8212;Compile Python source files</h1>

<p>The {@link py_compile} module provides a function to generate a
byte-code file from a source file, and another function used when the
module source file is invoked as a script.

<p>Though not often needed, this function can be useful when installing
modules for shared use, especially if some of the users may not have
permission to write the byte-code cache files in the directory
containing the source code.

@@exception PyCompileError

<p>Exception raised when an error occurs while attempting to compile the
file.

@@function compile(file[, cfile[, dfile[, doraise]]])

<p>Compile a source file to byte-code and write out the byte-code cache
file. The source code is loaded from the file name {@var file}. The
byte-code is written to {@var cfile}, which defaults to {@var file}
{@code +} {@code 'c'} ({@code 'o'} if optimization is enabled in the
current interpreter). If {@var dfile} is specified, it is used as the
name of the source file in error messages instead of {@var file}. If
{@var doraise} = True, a PyCompileError is raised when an error is
encountered while compiling {@var file}. If {@var doraise} = False (the
default), an error string is written to sys.stderr, but no exception is
raised.

@@function main([args])

<p>Compile several source files. The files named in {@var args} (or on
the command line, if {@var args} is not specified) are compiled and the
resulting bytecode is cached in the normal manner. This function does
not search a directory structure to locate source files; it only
compiles files named explicitly.

@@text 

<p>When this module is run as a script, the {@link main} is used to
compile all the files named on the command line.

@see 
{@link compileall Module compileall}

Utilities to compile all Python source files in a directory tree.
