<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Generating PythonDoc Pages for Virtual&nbsp;Modules</title></head><body data-page-id="238"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Generating PythonDoc Pages for Virtual&nbsp;Modules</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">November 2003 | Fredrik Lundh</p><p><a href="http://effbot.org/zone/pythondoc.htm">PythonDoc 2</a> can be
used both as a command-line utility, and as a Python module.  The latter
can come in handy in situations where there&#8217;s not a direct match between
the Python source files, and the programming interface exposed to the
user.  In such cases, you can use PythonDoc&#8217;s <b>parse</b> function to
read in the documentation for the actual source files, and manipulate
the resulting module descriptions in Python before generating the
output files.</p><p>For example, the <a href="http://effbot.org/zone/wck.htm">WCK</a>
library consists of a number of implementation modules, and a package
<b>__init__.py</b> that pulls everything together.  In the Tkinter
implementation, that <b>__init__.py</b> file looks something like
this:</p><pre class="python">
<span class="pycomment"># WCK/__init__.py</span>

<span class="pykeyword">from</span> wckTkinter <span class="pykeyword">import</span> *
<span class="pykeyword">from</span> Utils <span class="pykeyword">import</span> *</pre><p>In other words, the user gets access to all functions and classes
in both the <b>wckTkinter</b> module and the <b>Utils</b> module simply
by importing the <b>WCK</b> package itself.  Which is exactly what the
user is supposed to do, of course.  The other modules are just
implementation details.</p><p>Here&#8217;s a small script that parses both modules, and merges the result
into a single <b>WCK</b> module description:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> pythondoc <span class="pykeyword">import</span> parse, CompactHTML
<span class="pykeyword">from</span> elementtree.ElementTree <span class="pykeyword">import</span> Element

module = Element(<span class="pystring">"module"</span>, name=<span class="pystring">"WCK"</span>)

<span class="pykeyword">for</span> file <span class="pykeyword">in</span> [<span class="pystring">"WCK/wckTkinter.py"</span>, <span class="pystring">"WCK/Utils.py"</span>]:
    elem = parse(file)
    <span class="pykeyword">for</span> elem <span class="pykeyword">in</span> elem:
        <span class="pykeyword">if</span> module <span class="pykeyword">and</span> elem.tag == <span class="pystring">"info"</span>:
            <span class="pycomment"># skip all module info sections except the first</span>
            <span class="pykeyword">continue</span>
        module.append(elem)

formatter = CompactHTML()
<span class="pykeyword">print</span> formatter.save(module, <span class="pystring">"WCK"</span>), <span class="pystring">"ok"</span></pre></div><div class="yui-ge"><div class="yui-u first"><p>The output from this script will look something like this:
<a href="http://effbot.org/zone/wck-api.htm"><cite>The WCK Module</cite></a>.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
