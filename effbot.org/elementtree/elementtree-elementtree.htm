<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>The ElementTree API (Work In&nbsp;Progress)</title></head><body data-page-id="1995"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">The ElementTree API (Work In&nbsp;Progress)</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">Fredrik Lundh | December 2007</p><p>This document describes the <b>ElementTree</b> interface.</p><p>Also see <a href="/zone/pythondoc-elementtree-ElementTree.htm"><em>The
elementtree.ElementTree Module</em></a>.</p><h2 id="tag-ET.ElementTree">The ElementTree Class&#160;<a class="nav" href="#tag-ET.ElementTree" title="bookmark!">#</a></h2><p><strong>ElementTree(element)</strong> &#8658; tree</p><p>Wraps an element in a tree object.  The given element becomes the root element for this tree.</p><p><strong>ElementTree()</strong> &#8658; tree</p><p>Same, but creates an empty tree.  The root element is set to None.  Use <strong>parse</strong> or <strong>_setroot</strong> to set the root.</p><p><strong>ElementTree(file=source)</strong> &#8658; tree</p><p>Same, but loads an XML document into the tree.  This is the same thing as creating an empty tree and calling the <strong>parse</strong> method on it:</p><pre class="python">tree = ET.ElementTree()
tree.parse(source)</pre><p>Alternatively, you can use the <strong>parse</strong> function to create a tree and load it in one step.</p><pre class="python">tree = ET.parse(source)</pre><h2 id="methods">Methods&#160;<a class="nav" href="#methods" title="bookmark!">#</a></h2><h3 id="tag-ET.ElementTree.parse">parse&#160;<a class="nav" href="#tag-ET.ElementTree.parse" title="bookmark!">#</a></h3><p><strong>tree.parse(source)</strong> &#8658; element</p><p>Loads an external XML document into this tree.  The original contents are discarded.  The source can be either a file name or a file object, or any other object that implements a file-like <strong>read</strong> method.</p><p>This method returns the root element.</p><p><strong>tree.parse(source, parser)</strong> &#8658; element</p><p>Same, but uses the given parser object.</p><h3 id="tag-ET.ElementTree.iter">iter&#160;<a class="nav" href="#tag-ET.ElementTree.iter" title="bookmark!">#</a></h3><h3 id="tag-ET.ElementTree.getiterator">getiterator&#160;<a class="nav" href="#tag-ET.ElementTree.getiterator" title="bookmark!">#</a></h3><h3 id="tag-ET.ElementTree.find">find&#160;<a class="nav" href="#tag-ET.ElementTree.find" title="bookmark!">#</a></h3><h3 id="tag-ET.ElementTree.findall">findall&#160;<a class="nav" href="#tag-ET.ElementTree.findall" title="bookmark!">#</a></h3><h3 id="tag-ET.ElementTree.findtext">findtext&#160;<a class="nav" href="#tag-ET.ElementTree.findtext" title="bookmark!">#</a></h3><h3 id="tag-ET.ElementTree.write">write&#160;<a class="nav" href="#tag-ET.ElementTree.write" title="bookmark!">#</a></h3><p><strong>tree.write(file)</strong></p><p><strong>tree.write(file, options)</strong></p><p>Writes the tree to an XML file.  The file can be either a name, or a file object, or any other object that has a file-like <strong>write</strong> method.</p><p><strong>tree.write(file, encoding)</strong></p><p>(Deprecated) Same, with the encoding given as a positional
argument instead of a keyword option.  This syntax is not
portable, and should be avoided in new code.</p><h4>Options</h4><p>Use keyword arguments to provide options to the method:</p><p><strong>encoding=</strong> Output encoding.  If omitted or set to None,
defaults to US-ASCII.  The current ElementTree implementation only supports ASCII-compatible encodings (e.g. ISO-8859-1, UTF-8, and other encodings where the first 128 characters are identical to US-ASCII).</p><p><strong>method=</strong> (New in 1.3)  Output format.  One of &#8220;xml&#8221;, &#8220;html&#8221; for HTML serialization (special treatment of empty elements and script/style elements), &#8220;text&#8221; (text and tail content only), and &#8220;c14n&#8221; (canonicalized output).  If omitted or set to None, it defaults to &#8220;xml&#8221;.</p><p><strong>xml_declaration=</strong>  (New in 1.3)  If <strong>True</strong>, always outputs an XML declaration. If <strong>False</strong>, never outputs an XML declaration.  If omitted or <strong>None</strong>, only outputs a declaration if the encoding is neither US-ASCII nor UTF-8.  In ElementTree 1.2, this option is hard-wired to None.</p><p><strong>default_namespace=</strong>  (New in 1.3)  Specifies the default namespace to use for this file (an URI).  If omitted, all namespaces gets distinct prefixes (usually &#8220;ns&#8221; plus a number).</p><p>In the current alpha, this only works if <em>all</em> elements in the
tree belongs to a namespace.</p><h3 id="tag-ET.ElementTree.write_c14n">write_c14n&#160;<a class="nav" href="#tag-ET.ElementTree.write_c14n" title="bookmark!">#</a></h3><p><strong>tree.write_c14n(file)</strong></p><p>(New in 1.3)  An alias for calling <strong>write</strong> with the <strong>method</strong> option set to &#8220;c14n&#8221;.  Using the <strong>write</strong> method is preferred.</p><h3 id="tag-ET.ElementTree.getroot">getroot&#160;<a class="nav" href="#tag-ET.ElementTree.getroot" title="bookmark!">#</a></h3><p><strong>tree.getroot()</strong> &#8658; element</p><p>Fetches the <strong>root</strong> element.</p><h3 id="tag-ET.ElementTree.setroot">_setroot&#160;<a class="nav" href="#tag-ET.ElementTree.setroot" title="bookmark!">#</a></h3><p><strong>tree._setroot(element)</strong></p><p>Replaces the <strong>root</strong> element.  The old content is discarded.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to elementtree index page.">::: elementtree :::</a></b></li></ul><ul><li><b>::: contents</b></li></ul><ul><li><ul><li><a href="#tag-ET.ElementTree">The ElementTree Class</a></li><li><a href="#methods">Methods</a></li><li><ul><li><a href="#tag-ET.ElementTree.parse">parse</a></li><li><a href="#tag-ET.ElementTree.iter">iter</a></li><li><a href="#tag-ET.ElementTree.getiterator">getiterator</a></li><li><a href="#tag-ET.ElementTree.find">find</a></li><li><a href="#tag-ET.ElementTree.findall">findall</a></li><li><a href="#tag-ET.ElementTree.findtext">findtext</a></li><li><a href="#tag-ET.ElementTree.write">write</a></li><li><a href="#tag-ET.ElementTree.write_c14n">write_c14n</a></li><li><a href="#tag-ET.ElementTree.getroot">getroot</a></li><li><a href="#tag-ET.ElementTree.setroot">_setroot</a></li></ul></li></ul></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
