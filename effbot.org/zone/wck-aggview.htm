<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>An AggDraw-based WCK&nbsp;View</title></head><body data-page-id="351"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">An AggDraw-based WCK&nbsp;View</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">Updated October 15, 2005 | August 21, 2005 | Fredrik Lundh</p><p>This is a simple <a href="wck.htm">WCK widget</a> base class,
which uses the <a href="draw-agg.htm">AggDraw</a> library to render
the widget contents.</p><p>To use this widget, create a subclass and implement the
<b>agg_draw</b> method.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><div class="example wide"><pre class="python wide">
<span class="pycomment"># File: wckAggView.py</span>

<span class="pykeyword">from</span> WCK <span class="pykeyword">import</span> Widget

<span class="pykeyword">import</span> aggdraw

<span class="pykeyword">class</span> <span class="pyclass">AggView</span>(Widget):

    ui_option_width = 100
    ui_option_height = 100

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_config</span>(self):
        <span class="pykeyword">return</span> int(self.ui_option_width), int(self.ui_option_height)

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_resize</span>(self, width, height):
        self.size = width, height
        self.image = None

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_clear</span>(self, draw, x0, y0, x1, y1):
        <span class="pykeyword">pass</span> <span class="pycomment"># ignore clear events</span>

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_repair</span>(self, draw, x0, y0, x1, y1):
        <span class="pykeyword">if</span> self.image <span class="pykeyword">is</span> None:
            <span class="pycomment"># create agg drawing context</span>
            ink = self.winfo_rgb(self.ui_option_background)
            ink = <span class="pystring">"#%02x%02x%02x"</span> % (ink[0]/256, ink[1]/256, ink[2]/256)
            d = aggdraw.Draw(<span class="pystring">"RGB"</span>, self.size, ink)
            self.agg_draw(d, 0, 0, self.size[0], self.size[1])
            <span class="pycomment"># update pixmap</span>
            self.image = self.ui_image(d.mode, d.size, d.tostring())
        draw.paste(self.image)

    <span class="pycomment">##</span>
    <span class="pycomment"># Forces redraw.</span>

    <span class="pykeyword">def</span> <span class="pyfunction">agg_damage</span>(self, x0=None, y0=None, x1=None, y1=None):
        self.image = None
        self.ui_damage(x0, y0, x1, y1)

    <span class="pycomment">##</span>
    <span class="pycomment"># (Hook) Called to draw the AGG view contents.  This is</span>
    <span class="pycomment"># called whenever the view needs to be redrawn.</span>

    <span class="pykeyword">def</span> <span class="pyfunction">agg_draw</span>(self, draw, x0, y0, x1, y1):
        <span class="pykeyword">pass</span></pre></div></div><div class="yui-ge"><div class="yui-u first"><p>Note that if you&#8217;re using WCK 1.1a1 or earlier, the &#8220;update pixmap&#8221;
code should be replaced with:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
            <span class="pycomment"># update pixmap</span>
            <span class="pykeyword">from</span> PIL <span class="pykeyword">import</span> Image
            im = Image.fromstring(d.mode, d.size, d.tostring())
            self.image = self.ui_image(im)</pre></div><div class="yui-ge"><div class="yui-u first"><p>Here&#8217;s a short example:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><div class="example wide"><pre class="python wide">
<span class="pykeyword">import</span> Tkinter

root = Tkinter.Tk()

<span class="pykeyword">class</span> <span class="pyclass">MyView</span>(AggView):
    <span class="pykeyword">def</span> <span class="pyfunction">agg_draw</span>(self, draw, x0, y0, x1, y1):
        draw.line((x0, y0, x1, y1), aggdraw.Pen(<span class="pystring">"black"</span>, 10))
        draw.line((x0, y1, x1, y0), aggdraw.Pen(<span class="pystring">"black"</span>, 10))

widget = MyView(root, width=200, height=300)
widget.pack(fill=<span class="pystring">"both"</span>, expand=1)

root.mainloop()</pre><pre class="wide">
<img alt="" height="227" src="/media/cache/1907706ae4c957180b5872aff404bd1d.png" width="308" />
</pre></div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
