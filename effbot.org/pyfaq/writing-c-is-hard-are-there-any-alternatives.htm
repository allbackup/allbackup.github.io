<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Writing C is hard; are there any&nbsp;alternatives?</title></head><body data-page-id="958"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Writing C is hard; are there any&nbsp;alternatives?</h1></div><div class="yui-ge"><div class="yui-u first"><p>There are a number of alternatives to writing your own C extensions, depending on what you&#8217;re trying to do.</p><p>If you need more speed, <a href="http://psyco.sourceforge.net/">Psyco</a> generates x86 assembly code from Python bytecode. You can use Psyco to compile the most time-critical functions in your code, and gain a significant improvement with very little effort, as long as you&#8217;re running on a machine with an x86-compatible processor.</p><p><a href="http://www.cosc.canterbury.ac.nz/~greg/python/Pyrex/"> Pyrex</a> is a compiler that accepts a slightly modified form of Python and generates the corresponding C code. Pyrex makes it possible to write an extension without having to learn Python&#8217;s C API.</p><p>If you need to interface to some C library for which no Python extension currently exists, you can use the <a href="/pyref/ctypes.htm"><strong>ctypes</strong></a> library, or wrap the library&#8217;s data types and functions with a tool such as <a href="http://www.swig.org">SWIG</a>.</p><p>For C++ libraries, see:</p><blockquote><p><a href="how-do-i-interface-to-c-objects-from-python.htm"><strong>how-do-i-interface-to-c-objects-from-python</strong></a></p></blockquote><p>CATEGORY: extending</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
