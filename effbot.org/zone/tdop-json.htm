<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>More Top-Down Parsing:&nbsp;JSON</title></head><body data-page-id="2025"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">More Top-Down Parsing:&nbsp;JSON</h1></div><div class="yui-ge"><div class="yui-u first"><p class="note">
I&#8217;ll replace this status report with an article about topdown parsing of JSON at a later time.  If you&#8217;re looking for a production-quality JSON library, get <b>simplejson</b>.  If
performance is critical, try <b>python-cjson</b>.
</p><p>While the main motivation for my work on <a href="tdop-index.htm">topdown parsing</a> was a number of bigger projects (at least one of them will appear on a site near you in a not too distant future), I&#8217;ve also used some spare time to play with TDOP-based parsing of other formats.</p><p>One example is a <a href="http://www.json.org/">JSON</a> parser, the first version of which took about an hour to write, and which resulted in about 60 lines of JSON-specific code (30 lines for the parser definitions, 30 lines for the tokenizer), and 120 lines in total (including the parser framework, that is).  Even the JSON-specific parts were mostly cut and pasted from the Python expression parser, and then just tweaked a little to fit.</p><p>The code is not quite ready for public consumption (just a leetle more testing is required&#8230;), but I&#8217;ll get there.</p><p>I did find the benchmarks a bit interesting.  Using a 10k JSON record, I get the following timings:</p><ul><li>tdopjson: 12.6 ms</li><li><a href="http://www.undefined.org/python/">simplejson</a>, with C accelerator: 20.2 ms</li><li>simplejson, without C accelerator: 24.8 ms</li></ul><p>That is, this &#8220;quick hack&#8221; is about twice as fast as a robust and well-optimized production parser, and is a quite a bit faster than even a Python/C hybrid parser.  Not bad.</p><p>This specific JSON record happened to be Python-compatible, so for comparison, I also fed it directly to Python&#8217;s <strong>eval</strong> (which isn&#8217;t something you&#8217;d want to do with arbitrary JSON, of course):</p><ul><li>eval: 5.3 ms</li></ul><p>Removing the &#8220;interpretation&#8221; code from the TDOP parser only shaves off a few milliseconds, so using TDOP for validation and then passing the result to <strong>eval</strong> would be a step back (it&#8217;ll still beat simplejson, though).</p><p>I also tried the JSON parser in the <strong>pyparsing</strong> example collection, but that couldn&#8217;t parse any of my existing samples (all based on samples from the JSON specification or real-life JSON services).  Using the sample provided with the parser, <strong>pyparsing</strong> seems to be about 30-40 times slower than the topdown approach.</p><p>(I&#8217;m sure a simple <s><a href="http://www.aurore.net/projects/php-json/">table-driven C implementation</a></s> (dead link) would run circles around both implementations, but that&#8217;s a somewhat different story.  I know how to write fast code in C/C++; in this case, I&#8217;m more interested in finding ways to write fast code in Python.)</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
