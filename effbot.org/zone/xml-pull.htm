<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Implementing Pull-Style XML&nbsp;Parsers</title></head><body data-page-id="372"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Implementing Pull-Style XML&nbsp;Parsers</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">May 4, 2000 | Fredrik Lundh</p><p class="note">This xml-dev posting inspired Paul Prescod to implement
the <b>xml.dom.pulldom</b> module,
which was later added to Python&#8217;s standard library.  A similar technique is used in ElementTree&#8217;s <a href="element-iterparse.htm">iterparse</a> API.</p><p><i>Q. I&#8217;m not sure how we would actually implement this. The only XML
parser we have that supports a pull-style interface is RXP, and I&#8217;m not
sure if we can convert the other interfaces to pull-style interfaces in
a sensible way (at least not on a level as low as SAX) without storing
the entire sequence of events.</i></p><p>Assuming that a pull-style parser is what I think it is, here&#8217;s
how to convert any incremental parser (xmllib, sgmlop, expat,
etc) to a pull-style parser:</p><pre class="python">
<span class="pykeyword">import</span> xmllib

START, DATA, END = <span class="pystring">"start"</span>, <span class="pystring">"data"</span>, <span class="pystring">"end"</span>

<span class="pykeyword">class</span> <span class="pyclass">XMLPuller</span>(xmllib.XMLParser):

    <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self, stream):
        xmllib.XMLParser.__init__(self)
        self.__stream = stream
        self.__tokens = []

    <span class="pykeyword">def</span> <span class="pyfunction">get</span>(self):
        <span class="pykeyword">while</span> <span class="pykeyword">not</span> self.__tokens:
            data = self.__stream.read(10000)
            <span class="pykeyword">if</span> <span class="pykeyword">not</span> data:
                self.close()
                <span class="pykeyword">break</span>
            self.feed(data)
        <span class="pykeyword">if</span> self.__tokens:
            <span class="pykeyword">return</span> self.__tokens.pop(0)
        <span class="pykeyword">return</span> None <span class="pycomment"># end of stream</span>

    <span class="pykeyword">def</span> <span class="pyfunction">unknown_starttag</span>(self, tag, attr):
        self.__tokens.append(START, tag, attr)

    <span class="pykeyword">def</span> <span class="pyfunction">handle_data</span>(self, data):
        self.__tokens.append(DATA, data)

    <span class="pykeyword">def</span> <span class="pyfunction">unknown_endtag</span>(self, tag):
        self.__tokens.append(END, tag)

puller = XMLPuller(open(<span class="pystring">"myfile.xml"</span>))

<span class="pykeyword">while</span> 1:
    next = puller.get()
    <span class="pykeyword">if</span> <span class="pykeyword">not</span> next:
        <span class="pykeyword">break</span>
    <span class="pykeyword">print</span> next</pre><p>[<a href="http://mail.python.org/pipermail/xml-sig/2000-May/002295.html">source</a>]</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
