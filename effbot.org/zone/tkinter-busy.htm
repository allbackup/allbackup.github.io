<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Displaying a Busy&nbsp;Cursor</title></head><body data-page-id="296"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Displaying a Busy&nbsp;Cursor</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">September 1998 | Fredrik Lundh</p><div class="example">
<b>Example 1: Changing the Root Window Cursor</b>
<pre class="python">
<span class="pykeyword">from</span> Tkinter <span class="pykeyword">import</span> *

root = Tk()

<span class="pycomment">#</span>
<span class="pycomment"># create a bunch of widgets</span>

Label(root, text=<span class="pystring">"a label"</span>).pack()

Button(root, text=<span class="pystring">"a button"</span>).pack()

Entry(root, text=<span class="pystring">"an entry"</span>).pack()

w = Listbox(root)
<span class="pykeyword">for</span> i <span class="pykeyword">in</span> range(10):
    w.insert(i, <span class="pystring">"item %d"</span> % (i+1))
w.pack()

w = Text(root, width=20, height=10)
w.insert(1.0, <span class="pystring">"a text widget"</span>)
w.pack()

<span class="pycomment">#</span>
<span class="pycomment"># first attempt: set a wait cursor on the root</span>
<span class="pycomment"># window, and see if that works.</span>

<span class="pykeyword">def</span> <span class="pyfunction">busy</span>():
    root.config(cursor=<span class="pystring">"wait"</span>)

<span class="pykeyword">def</span> <span class="pyfunction">notbusy</span>():
    root.config(cursor=<span class="pystring">""</span>)

b = Button(root, text=<span class="pystring">"busy!"</span>, command=busy)
b.pack()

b = Button(root, text=<span class="pystring">"not busy!"</span>, command=notbusy)
b.pack()

root.mainloop()</pre></div><p>&#160;</p><div class="example">
<b>Example 2: Update All Visible Widgets</b>
<pre class="python">
<span class="pykeyword">from</span> Tkinter <span class="pykeyword">import</span> *

root = Tk()

<span class="pycomment">#</span>
<span class="pycomment"># create a bunch of widgets</span>

Label(root, text=<span class="pystring">"a label"</span>).pack()

Button(root, text=<span class="pystring">"a button"</span>).pack()

Entry(root, text=<span class="pystring">"an entry"</span>).pack()

w = Listbox(root)
<span class="pykeyword">for</span> i <span class="pykeyword">in</span> range(10):
    w.insert(i, <span class="pystring">"item %d"</span> % (i+1))
w.pack()

w = Text(root, width=20, height=10)
w.insert(1.0, <span class="pystring">"a text widget"</span>)
w.pack()

<span class="pycomment">#</span>
<span class="pycomment"># second attempt: set a wait cursor on all children</span>
<span class="pycomment"># that doesn't already define their own cursor</span>

<span class="pykeyword">class</span> <span class="pyclass">BusyManager</span>:

    <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self, widget):
        self.toplevel = widget.winfo_toplevel()
        self.widgets = {}

    <span class="pykeyword">def</span> <span class="pyfunction">busy</span>(self, widget=None):

        <span class="pycomment"># attach busy cursor to toplevel, plus all windows</span>
        <span class="pycomment"># that define their own cursor.</span>

        <span class="pykeyword">if</span> widget <span class="pykeyword">is</span> None:
            w = self.toplevel <span class="pycomment"># myself</span>
        <span class="pykeyword">else</span>:
            w = widget

        <span class="pykeyword">if</span> <span class="pykeyword">not</span> self.widgets.has_key(str(w)):
            <span class="pykeyword">try</span>:
                <span class="pycomment"># attach cursor to this widget</span>
                cursor = w.cget(<span class="pystring">"cursor"</span>)
                <span class="pykeyword">if</span> cursor != <span class="pystring">"watch"</span>:
                    self.widgets[str(w)] = (w, cursor)
                    w.config(cursor=<span class="pystring">"watch"</span>)
            <span class="pykeyword">except</span> TclError:
                <span class="pykeyword">pass</span>

        <span class="pykeyword">for</span> w <span class="pykeyword">in</span> w.children.values():
            self.busy(w)

    <span class="pykeyword">def</span> <span class="pyfunction">notbusy</span>(self):
        <span class="pycomment"># restore cursors</span>
        <span class="pykeyword">for</span> w, cursor <span class="pykeyword">in</span> self.widgets.values():
            <span class="pykeyword">try</span>:
                w.config(cursor=cursor)
            <span class="pykeyword">except</span> TclError:
                <span class="pykeyword">pass</span>
        self.widgets = {}

manager = BusyManager(root)

b = Button(root, text=<span class="pystring">"busy!"</span>, command=manager.busy)
b.pack()

b = Button(root, text=<span class="pystring">"not busy!"</span>, command=manager.notbusy)
b.pack()

root.mainloop()</pre></div></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
