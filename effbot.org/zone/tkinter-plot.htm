<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Plotting Stuff Using PIL and&nbsp;Tkinter</title></head><body data-page-id="315"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Plotting Stuff Using PIL and&nbsp;Tkinter</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">January 28, 1998 | Fredrik Lundh</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> Tkinter <span class="pykeyword">import</span> *

<span class="pykeyword">import</span> Image, ImageDraw, ImageTk

<span class="pykeyword">import</span> time

<span class="pykeyword">class</span> <span class="pyclass">Test</span>(Frame):
    <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self):
        Frame.__init__(self)
        self.c = Canvas(self,width=100,height=100)
        self.c.pack()
        Button(self, text=<span class="pystring">'Go'</span>, command=self.do).pack()
        Button(self, text=<span class="pystring">'Quit'</span>, command=self.quit).pack()

    <span class="pykeyword">def</span> <span class="pyfunction">do</span>(self):
        t = time.time()
        im = Image.new(<span class="pystring">"1"</span>, (100,100))
        d  = ImageDraw.ImageDraw(im)
        <span class="pykeyword">for</span> i <span class="pykeyword">in</span> range(0,100):
            <span class="pykeyword">for</span> j <span class="pykeyword">in</span> range(0,100):
                d.point((i,j))
        self.photo = ImageTk.BitmapImage(im)
        self.c.create_image(0, 0, anchor=NW, image=self.photo)
        self.update()
        <span class="pykeyword">print</span> time.time() - t

t = Test()
t.pack() <span class="pycomment"># or place, or grid</span>
t.mainloop()</pre></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
