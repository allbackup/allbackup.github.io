<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>The __slots__&nbsp;attribute</title> <script type="text/javascript">effbot_page_id=1469;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <h1 class="maintitle">The __slots__&nbsp;attribute</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p>By default, instances of both old and new-style classes have a dictionary for attribute storage. This wastes space for objects having very few instance variables. The space consumption can become acute when creating large numbers of instances.</p><p>The default behavior can be overridden by defining __slots__ in a new-style class definition. The __slots__ declaration takes a sequence of instance variables and reserves just enough space in each instance to hold a value for each variable. Space is saved because __dict__ is not created for each instance.</p><p><strong>__slots__</strong></p><p>This class variable can be assigned a string, iterable, or sequence of
strings with variable names used by instances. If defined in a
new-style class, __slots__ reserves space for the declared
variables and prevents the automatic creation of __dict__ and
__weakref__ for each instance. New in version 2.2.</p><p>Notes on using __slots__</p><ul><li>Without a __dict__ variable, instances cannot be assigned new variables not listed in the __slots__ definition. Attempts to assign to an unlisted variable name raises AttributeError. If dynamic assignment of new variables is desired, then add <code>'\_\_dict\_\_'</code> to the sequence of strings in the __slots__ declaration. Changed in version 2.3: Previously, adding <code>'\_\_dict\_\_'</code> to the __slots__ declaration would not enable the assignment of new attributes not specifically listed in the sequence of instance variable names.</li><li>Without a __weakref__ variable for each instance, classes defining __slots__ do not support weak references to its instances. If weak reference support is needed, then add <code>'\_\_weakref\_\_'</code> to the sequence of strings in the __slots__ declaration.  Changed in version 2.3: Previously, adding <code>'\_\_weakref\_\_'</code> to the __slots__ declaration would not enable support for weak references.</li><li>__slots__ are implemented at the class level by creating <a href="descriptors.htm"><strong>descriptors</strong></a> for each variable name. As a result, class attributes cannot be used to set default values for instance variables defined by __slots__; otherwise, the class attribute would overwrite the descriptor assignment.</li><li>If a class defines a slot also defined in a base class, the instance variable defined by the base class slot is inaccessible (except by retrieving its descriptor directly from the base class). This renders the meaning of the program undefined. In the future, a check may be added to prevent this.</li><li>The action of a __slots__ declaration is limited to the class where it is defined. As a result, subclasses will have a __dict__ unless they also define  __slots__.</li><li>__slots__ do not work for classes derived from &#8220;variable-length&#8221; built-in types such as  long, str and  tuple.</li><li>Any non-string iterable may be assigned to  __slots__. Mappings may also be used; however, in the future, special meaning may be assigned to the values corresponding to each key.</li></ul></div><div class="yui-u">&#160;</div></div><div class="yui-g"><div class='comment'>
<p><b>Comment:</b></p>
<p>
This is a special attribute, not a method.</p>
<p>Posted by <b class='author'><a href='http://pyref.infogami.com/method-slots/_comments/55af'>infogami</a></b></p>
</div>
</div> <!-- yui-g --></div> <!-- content --> </div> <!-- yui-b --> </div> <!-- yui-main --> <div class="yui-b"> <div id='menu'> <ul> <li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li> <li><b><a href="." title="Go to pyref index page.">::: pyref :::</a></b></li> </ul> </div> <!-- menu --> </div> <!-- yui-b --> </div> <!-- bd --> <div id="ft"> <!-- footer --> <p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;"></a>
this page was rendered by a <a href="http://www.djangoproject.com/">django</a> application in 0.01s 2010-12-16 15:57:46.542105.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p> </div> <!-- ft --> </div> <!-- doc --> <script src="/media/js/effbot-min.js" type="text/javascript"> </script> </body> </html>
