<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Why isn't there a switch or case statement in&nbsp;Python?</title></head><body data-page-id="952"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Why isn't there a switch or case statement in&nbsp;Python?</h1></div><div class="yui-ge"><div class="yui-u first"><p>You can do this easily enough with a sequence of <a href="/pyref/if.htm"><strong>if</strong></a> and
<a href="/pyref/elif.htm"><strong>elif</strong></a> statements.  There have been some proposals for switch
statement syntax, but there is no consensus (yet) on whether and how
to do range tests, and more importantly, when and how to evaluate
constant case expressions. See <a href="http://www.python.org/dev/peps/pep-0275/"><strong>PEP 275</strong></a> for some
background.</p><p>For cases where you need to choose from a very large number of possibilities, you can create a dictionary mapping case values to functions to call. For example:</p><pre class="python"><span class="pykeyword">def</span> <span class="pyfunction">function_1</span>():
    <span class="pykeyword">print</span> <span class="pystring">"1"</span>

functions = {
    <span class="pystring">'a'</span>: function_1,
    <span class="pystring">'b'</span>: function_2,
    <span class="pystring">'c'</span>: self.method_1,
     <span class="pycomment"># ...</span>
}

func = functions[value]
func()</pre><p>For calling methods on objects, you can simplify yet further by using
the <a href="/pyref/getattr.htm"><strong>getattr</strong></a> built-in to retrieve methods with a particular
name:</p><pre class="python"><span class="pykeyword">class</span> <span class="pyclass">MyClass</span>:

    <span class="pykeyword">def</span> <span class="pyfunction">visit_a</span>(self):
        <span class="pykeyword">print</span> <span class="pystring">"A"</span>

    <span class="pykeyword">def</span> <span class="pyfunction">visit_b</span>(self):
        <span class="pykeyword">print</span> <span class="pystring">"B"</span>

    <span class="pycomment"># ...</span>

    <span class="pykeyword">def</span> <span class="pyfunction">dispatch</span>(self, value):
        method_name = <span class="pystring">'visit_'</span> + str(value)
        <span class="pykeyword">try</span>:
            method = getattr(self, method_name)
        <span class="pykeyword">except</span> AttributeError:
            <span class="pykeyword">print</span> method_name, <span class="pystring">"not found"</span>
        <span class="pykeyword">else</span>:
            method()</pre><p>It&#8217;s suggested that you use a prefix for the method names, such as
&#8220;visit_&#8221; in this example. Without such a prefix, if values are coming
from an untrusted source, an attacker would be able to call any method
on your object.</p><p>CATEGORY: general</p><p>CATEGORY: design</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
