<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>How do I read (or write) binary&nbsp;data?</title></head><body data-page-id="815"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">How do I read (or write) binary&nbsp;data?</h1></div><div class="yui-ge"><div class="yui-u first"><p>For complex, non-regular data formats, it&#8217;s best to use the <a href="/pyref/struct.htm"><strong>struct</strong></a> module. It allows you to take a string containing binary data (usually numbers) and convert it to Python objects; and vice versa.</p><p>For example, the following code reads two 2-byte integers and one 4-byte integer in big-endian format from a file:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide"><span class="pykeyword">import</span> struct

f = open(filename, <span class="pystring">"rb"</span>)  <span class="pycomment"># Open in binary mode for portability</span>
s = f.read(8)
x, y, z = struct.unpack(<span class="pystring">"&gt;hhl"</span>, s)</pre></div><div class="yui-ge"><div class="yui-u first"><p>The &#8216;&gt;&#8217; in the format string forces big-endian data; the letter &#8216;h&#8217; reads one &#8220;short integer&#8221; (2 bytes), and &#8216;l&#8217; reads one &#8220;long integer&#8221; (4 bytes) from the string.</p><p>For data that is more regular (e.g. a homogeneous list of ints or floats), you can also use the <a href="/pyref/array.htm"><strong>array</strong></a> module.</p><p>CATEGORY: library</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
