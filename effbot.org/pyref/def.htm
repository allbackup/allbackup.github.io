<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>Function&nbsp;definitions</title> <script type="text/javascript">effbot_page_id=1243;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <h1 class="maintitle">Function&nbsp;definitions</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p>A function definition defines a user-defined <a href="type-function">function</a> object (see <a href="type-function.htm"><strong>type-function</strong></a>):</p><p>Syntax (simplified):</p><blockquote><p><strong>def</strong> <em><a href="syntax-identifier">name</a></em> <strong>(</strong> <em><a href="syntax-parameter">parameter list</a></em> <strong>):</strong> <br />
  &#160;&#160;&#160;&#160;<em><a href="syntax-suite">suite</a></em></p></blockquote><p>or</p><blockquote><p>[<strong>@</strong> <em><a href="syntax-decorator">decorator</a></em> ]&#8230; <br />
<strong>def</strong> <em><a href="syntax-identifier">name</a></em> <strong>(</strong> <em><a href="syntax-parameter">parameter list</a></em> <strong>):</strong> <br />
  &#160;&#160;&#160;&#160;<em><a href="syntax-suite">suite</a></em></p></blockquote><p /><p>A function definition is an executable statement. Its execution binds the function name in the current local namespace to a function object (a wrapper around the executable code for the function). This function object contains a reference to the current global namespace as the global namespace to be used when the function is called.</p><p>The function definition does not execute the function body; this gets executed only when the function is called.</p><p>A function definition may be wrapped by one or more decorator expressions. Decorator expressions are evaluated when the function is defined, in the scope that contains the function definition. The result must be a callable, which is invoked with the function object as the only argument. The returned value is bound to the function name instead of the function object. Multiple decorators are applied in nested fashion. For example, the following code:</p><pre class="python">@<span class="pydecorator">f1</span>(arg)
@<span class="pydecorator">f2</span>
<span class="pykeyword">def</span> <span class="pyfunction">func</span>(): <span class="pykeyword">pass</span></pre><p>is equivalent to:</p><pre class="python"><span class="pykeyword">def</span> <span class="pyfunction">func</span>(): <span class="pykeyword">pass</span>
func = f1(arg)(f2(func))</pre><p>When one or more top-level parameters have the form  parameter <code>=</code> expression, the function is said to have <q>default parameter values.</q> For a parameter with a default value, the corresponding argument may be omitted from a call, in which case the parameter&#8217;s default value is substituted. If a parameter has a default value, all following parameters must also have a default value &#8212; this is a syntactic restriction that is not expressed by the grammar.</p><div class="note"><p><b>Default parameter values are evaluated when the function definition is executed.</b> This means that the expression is evaluated once, when the function is defined, and that that same <q>pre-computed</q> value is used for each call. This is especially important to understand when a default parameter is a mutable object, such as a list or a dictionary: if the function modifies the object (e.g. by appending an item to a list), the default value is in effect modified. This is generally not what was intended. A way around this is to use [**None**](None.htm) as the default, and explicitly test for it in the body of the function, e.g.:</p><pre>
    def whats_on_the_telly(penguin=None):
        if penguin is None:
            penguin = []
        penguin.append("property of the zoo")
        return penguin
</pre></div><p>Function call semantics are described in more detail in <a href="calls.htm"><strong>calls</strong></a>. A function call always assigns values to all parameters mentioned in the parameter list, either from position arguments, from keyword arguments, or from default values. If the form <q><code>*identifier</code></q> is present, it is initialized to a tuple receiving any excess positional parameters, defaulting to the empty tuple. If the form <q><code>**identifier</code></q> is present, it is initialized to a new dictionary receiving any excess keyword arguments, defaulting to a new empty dictionary.</p><p>It is also possible to create anonymous functions (functions not bound to a name), for immediate use in expressions. This uses <a href="lambda.htm"><strong>lambda</strong></a> forms. Note that the lambda form is merely a shorthand for a simplified function definition; a function defined in a <strong>def</strong> statement can be passed around or assigned to another name just like a function defined by a lambda form. The <strong>def</strong> form is actually more powerful since it allows the execution of multiple statements.</p><p><strong>Programmer&#8217;s note:</strong> Functions are first-class objects. A <strong>def</strong> form executed inside a function definition defines a local function that can be returned or passed around. Free variables used in the nested function can access the local variables of the function containing the def. See <a href="naming-and-binding.htm"><strong>naming-and-binding</strong></a> for details.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div> <!-- yui-g --></div> <!-- content --> </div> <!-- yui-b --> </div> <!-- yui-main --> <div class="yui-b"> <div id='menu'> <ul> <li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li> <li><b><a href="." title="Go to pyref index page.">::: pyref :::</a></b></li> </ul> </div> <!-- menu --> </div> <!-- yui-b --> </div> <!-- bd --> <div id="ft"> <!-- footer --> <p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;"></a>
this page was rendered by a <a href="http://www.djangoproject.com/">django</a> application in 0.01s 2012-12-03 23:08:10.609477.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p> </div> <!-- ft --> </div> <!-- doc --> <script src="/media/js/effbot-min.js" type="text/javascript"> </script> </body> </html>
