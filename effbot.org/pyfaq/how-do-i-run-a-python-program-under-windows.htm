<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>How do I run a Python program under&nbsp;Windows?</title></head><body data-page-id="816"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">How do I run a Python program under&nbsp;Windows?</h1></div><div class="yui-ge"><div class="yui-u first"><p>This is not necessarily a straightforward question.  If you are
already familiar with running programs from the Windows command line
then everything will seem obvious; otherwise, you might need a little
more guidance.  There are also differences between Windows 95, 98, NT,
ME, 2000 and XP which can add to the confusion.</p><p>Unless you use some sort of integrated development environment, you
will end up <em>typing</em> Windows commands into what is variously referred
to as a &#8220;DOS window&#8221; or &#8220;Command prompt window&#8221;.  Usually you can
create such a window from your Start menu; under Windows 2000 the menu
selection is &#8220;Start | Programs | Accessories | Command Prompt&#8221;.  You
should be able to recognize when you have started such a window
because you will see a Windows &#8220;command prompt&#8221;, which usually looks
like this:</p><pre><code>C:\&gt;
</code></pre><p>The letter may be different, and there might be other things after it,
so you might just as easily see something like:</p><pre><code>D:\Steve\Projects\Python&gt;
</code></pre><p>depending on how your computer has been set up and what else you have
recently done with it.  Once you have started such a window, you are
well on the way to running Python programs.</p><p>You need to realize that your Python scripts have to be processed by
another program called the Python interpreter.  The interpreter reads
your script, compiles it into bytecodes, and then executes the
bytecodes to run your program.  So, how do you arrange for the
interpreter to handle your Python?</p><p>First, you need to make sure that your command window recognises the
word &#8220;python&#8221; as an instruction to start the interpreter.  If you have
opened a command window, you should try entering the command python
and hitting return.  You should then see something like:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="wide wide"><code>Python 2.2 (#28, Dec 21 2001, 12:21:22) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt;
</code></pre></div><div class="yui-ge"><div class="yui-u first"><p>You have started the interpreter in &#8220;interactive mode&#8221;.  That means
you can enter Python statements or expressions interactively and have
them executed or evaluated while you wait.  This is one of Python&#8217;s
strongest features.  Check it by entering a few expressions of your
choice and seeing the results:</p><pre class="python">&gt;&gt;&gt; <span class="pykeyword">print</span> <span class="pystring">"Hello"</span>
Hello
&gt;&gt;&gt; <span class="pystring">"Hello"</span> * 3
HelloHelloHello</pre><p>Many people use the interactive mode as a convenient yet highly
programmable calculator.  When you want to end your interactive Python
session, hold the Ctrl key down while you enter a Z, then hit the
&#8220;Enter&#8221; key to get back to your Windows command prompt.</p><p>You may also find that you have a Start-menu entry such as &#8220;Start |
Programs | Python 2.2 | Python (command line)&#8221; that results in you
seeing the &gt;&gt;&gt; prompt in a new window.  If so, the window
will disappear after you enter the Ctrl-Z character; Windows is
running a single &#8220;python&#8221; command in the window, and closes it when
you terminate the interpreter.</p><p>If the python command, instead of displaying the interpreter prompt
&gt;&gt;&gt;, gives you a message like:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="wide wide"><code>'python' is not recognized as an internal or external command,
operable program or batch file.
</code></pre></div><div class="yui-ge"><div class="yui-u first"><p>or:</p><pre><code>Bad command or filename
</code></pre><p>then you need to make sure that your computer knows where to find the
Python interpreter.  To do this you will have to modify a setting
called PATH, which is a list of directories where Windows will look
for programs.  You should arrange for Python&#8217;s installation directory
to be added to the PATH of every command window as it starts.  If you
installed Python fairly recently then the command</p><pre><code>dir C:\py*
</code></pre><p>will probably tell you where it is installed; the usual location is
something like C:\Python23.  Otherwise you will be reduced to a search
of your whole disk &#8230; use &#8220;Tools | Find&#8221; or hit the &#8220;Search&#8221; button
and look for &#8220;python.exe&#8221;.  Supposing you discover that Python is
installed in the C:\Python23 directory (the default at the time of
writing), you should make sure that entering the command</p><pre><code>c:\Python23\python
</code></pre><p>starts up the interpreter as above (and don&#8217;t forget you&#8217;ll need a
&#8220;CTRL-Z&#8221; and an &#8220;Enter&#8221; to get out of it).  Once you have verified the
directory, you need to add it to the start-up routines your computer
goes through.  For older versions of Windows the easiest way to do
this is to edit the C:\AUTOEXEC.BAT file. You would want to add a line
like the following to AUTOEXEC.BAT:</p><pre><code>PATH C:\Python23;%PATH%
</code></pre><p>For Windows NT, 2000 and XP, you will need to add a string such as</p><pre><code>;C:\Python23
</code></pre><p>to the current setting for the PATH environment variable, which you
will find in the properties window of &#8220;My Computer&#8221; under the
&#8220;Advanced&#8221; tab.  Note that if you have sufficient privilege you might
get a choice of installing the settings either for the Current User or
for System.  The latter is preferred if you want everybody to be able
to run Python on the machine.</p><p>If you aren&#8217;t confident doing any of these manipulations yourself, ask
for help!  At this stage you may want to reboot your system to make
absolutely sure the new setting has taken effect.  You probably won&#8217;t
need to reboot for Windows NT, XP or 2000.  You can also avoid it in
earlier versions by editing the file C:\WINDOWS\COMMAND\CMDINIT.BAT
instead of AUTOEXEC.BAT.</p><p>You should now be able to start a new command window, enter python at
the C:&gt; (or whatever) prompt, and see the &gt;&gt;&gt; prompt that
indicates the Python interpreter is reading interactive commands.</p><p>Let&#8217;s suppose you have a program called pytest.py in directory
C:\Steve\Projects\Python.  A session to run that program might look
like this:</p><pre><code>C:\&gt; cd \Steve\Projects\Python
C:\Steve\Projects\Python&gt; python pytest.py
</code></pre><p>Because you added a file name to the command to start the interpreter,
when it starts up it reads the Python script in the named file,
compiles it, executes it, and terminates, so you see another C:\&gt;
prompt.  You might also have entered</p><pre><code>C:\&gt; python \Steve\Projects\Python\pytest.py
</code></pre><p>if you hadn&#8217;t wanted to change your current directory.</p><p>Under NT, 2000 and XP you may well find that the installation process
has also arranged that the command pytest.py (or, if the file isn&#8217;t in
the current directory, C:\Steve\Projects\Python\pytest.py) will
automatically recognize the &#8220;.py&#8221; extension and run the Python
interpreter on the named file.  Using this feature is fine, but <em>some</em>
versions of Windows have bugs which mean that this form isn&#8217;t exactly
equivalent to using the interpreter explicitly, so be careful.</p><p>The important things to remember are:</p><ol><li><p>Start Python from the Start Menu, or make sure the PATH is set
 correctly so Windows can find the Python interpreter.</p><pre><code> python
</code></pre><p>should give you a &#8216;&gt;&gt;&gt;&#8221; prompt from the Python
 interpreter.  Don&#8217;t forget the CTRL-Z and ENTER to terminate the
 interpreter (and, if you started the window from the Start Menu,
 make the window disappear).</p></li><li><p>Once this works, you run programs with commands:</p><pre><code> python {program-file}
</code></pre></li><li><p>When you know the commands to use you can build Windows shortcuts
 to run the Python interpreter on any of your scripts, naming
 particular working directories, and adding them to your
 menus. Take a look at</p><pre><code> python --help
</code></pre><p>if your needs are complex.</p></li><li><p>Interactive mode (where you see the &gt;&gt;&gt; prompt) is best
 used for checking that individual statements and expressions do
 what you think they will, and for developing code by experiment.</p></li></ol><p>For more on running Python scripts on Windows, see this entry:</p><blockquote><p><a href="how-do-i-make-python-scripts-executable.htm"><strong>how-do-i-make-python-scripts-executable</strong></a></p></blockquote><p>CATEGORY: windows</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
