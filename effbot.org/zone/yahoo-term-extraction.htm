<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>['term',&nbsp;'extraction']</title></head><body data-page-id="381"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">['term',&nbsp;'extraction']</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">Fredrik Lundh | November 2005 | Originally posted to <a href="http://online.effbot.org">online.effbot.org</a></p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><p class="wide"><a href="http://www.mymarkup.net/blog/">Erik Stattin</a> linked to
<s><a href="http://www.hackdiary.com/archives/000071.html">this page</a></s> (dead link) which led me to
<s><a href="http://www.hackdiary.com/archives/000070.html">this page</a></s> (dead link) which reminded me of
<a href="http://developer.yahoo.net/search/content/V1/termExtraction.html">this</a> 
which inspired me to whip up this little script:

<pre class="python wide">
<span class="pycomment"># File: YahooTermExtraction.py</span>
<span class="pycomment">#</span>
<span class="pycomment"># An interface to Yahoo's Term Extraction service:</span>
<span class="pycomment">#</span>
<span class="pycomment"># http://developer.yahoo.net/search/content/V1/termExtraction.html</span>
<span class="pycomment">#</span>
<span class="pycomment"># "The Term Extraction Web Service provides a list of significant</span>
<span class="pycomment"># words or phrases extracted from a larger content."</span>
<span class="pycomment">#</span>

<span class="pykeyword">import</span> urllib
<span class="pykeyword">try</span>:
    <span class="pykeyword">from</span> xml.etree <span class="pykeyword">import</span> ElementTree <span class="pycomment"># 2.5 and later</span>
<span class="pykeyword">except</span> ImportError:
    <span class="pykeyword">from</span> elementtree <span class="pykeyword">import</span> ElementTree

URI = <span class="pystring">"http://api.search.yahoo.com"</span>
URI = URI + <span class="pystring">"/ContentAnalysisService/V1/termExtraction"</span>

<span class="pykeyword">def</span> <span class="pyfunction">termExtraction</span>(appid, context, query=None):
    d = dict(
        appid=appid,
        context=context.encode(<span class="pystring">"utf-8"</span>)
        )
    <span class="pykeyword">if</span> query:
        d[<span class="pystring">"query"</span>] = query.encode(<span class="pystring">"utf-8"</span>)
    result = []
    f = urllib.urlopen(URI, urllib.urlencode(d))
    <span class="pykeyword">for</span> event, elem <span class="pykeyword">in</span> ElementTree.iterparse(f):
        <span class="pykeyword">if</span> elem.tag == <span class="pystring">"{urn:yahoo:cate}Result"</span>:
            result.append(elem.text)
    <span class="pykeyword">return</span> result</pre></p></div><div class="yui-ge"><div class="yui-u first"><p>Usage:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
&gt;&gt;&gt; <span class="pykeyword">from</span> YahooTermExtraction <span class="pykeyword">import</span> termExtraction
&gt;&gt;&gt; appid = <span class="pystring">"/your app id/"</span>
&gt;&gt;&gt; uri = <span class="pystring">"/some uri/"</span>
&gt;&gt;&gt; text = urllib.urlopen(uri).read()
&gt;&gt;&gt; termExtraction(appid, text)[-5:]
[<span class="pystring">'horrible picture'</span>, <span class="pystring">'logo'</span>, <span class="pystring">'spammer'</span>, <span class="pystring">'moron'</span>, <span class="pystring">'cat mouse'</span>]</pre></div><div class="yui-ge"><div class="yui-u first"><p>(For best results, you should probably run the text through a
HTML-to-text conversion before you send it to Yahoo.  Some variation
of <a href="textify.htm">this script</a> might be useful.)</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
