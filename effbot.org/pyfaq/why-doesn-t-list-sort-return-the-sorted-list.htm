<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Why doesn't list.sort() return the sorted&nbsp;list?</title></head><body data-page-id="941"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Why doesn't list.sort() return the sorted&nbsp;list?</h1></div><div class="yui-ge"><div class="yui-u first"><p>In situations where performance matters, making a copy of the list just to sort it would be wasteful. Therefore, <a href="/pyref/list.sort.htm"><strong>list.sort</strong></a> sorts the list in place. In order to remind you of that fact,
it does not return the sorted list. This way, you won&#8217;t be fooled into accidentally overwriting a list when you
need a sorted copy but also need to keep the unsorted version around.</p><p>In Python 2.4 a new builtin &#8212; <a href="/pyref/sorted.htm"><strong>sorted</strong></a> &#8212; has been added. This function creates
a new list from a passed iterable, sorts it and returns it.</p><p>As a result, here&#8217;s the idiom to iterate over the keys of a dictionary in sorted order:</p><pre class="python"><span class="pykeyword">for</span> key <span class="pykeyword">in</span> sorted(dict):
    ...do whatever <span class="pykeyword">with</span> dict[key]...</pre><p>Versions of Python prior to 2.4 need to use the following idiom:</p><pre class="python">keys = dict.keys()
keys.sort()
<span class="pykeyword">for</span> key <span class="pykeyword">in</span> keys:
    ...do whatever <span class="pykeyword">with</span> dict[key]...</pre><p>CATEGORY: general</p><p>CATEGORY: design</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
