<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>The for&nbsp;statement</title> <script type="text/javascript">effbot_page_id=1312;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <h1 class="maintitle">The for&nbsp;statement</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p>The for statement is used to iterate over the elements of a sequence
(such as a string, tuple or list) or other iterable object.</p><p>Syntax:</p><blockquote><p><strong>for</strong> <em><a href="syntax-target">target list</a></em> <strong>in</strong> <em><a href="syntax-expression">expression list</a></em> <strong>:</strong> <br />
  &#160;&#160;&#160;&#160;<em><a href="syntax-suite">suite</a></em> <br />
  [<strong>else:</strong> <br />
  &#160;&#160;&#160;&#160;<em><a href="syntax-suite">suite</a></em> ]</p></blockquote><p>The expression list is evaluated once; it should yield an iterable
object.  An <a href="iterator-interface">iterator</a> is created for the result
of the expression list. The suite is then executed once for each item
provided by the iterator, in the order of ascending indices. Each item
in turn is assigned to the target list using the standard rules for
assignments, and then the suite is executed. When the items are
exhausted (which is immediately when the sequence is empty), the suite
in the <a href="else.htm"><strong>else</strong></a> clause, if present, is executed, and the loop terminates.</p><p>A <a href="break.htm"><strong>break</strong></a> statement executed in the first suite terminates the loop
without executing the <a href="else.htm"><strong>else</strong></a> clause&#8217;s suite. A <a href="continue.htm"><strong>continue</strong></a> statement
executed in the first suite skips the rest of the suite and continues
with the next item, or with the <a href="else.htm"><strong>else</strong></a> clause if there was no next item.</p><p>The suite may assign to the variable(s) in the target list; this does
not affect the next item assigned to it.</p><p>The target list is not deleted when the loop is finished, but if the
sequence is empty, it will not have been assigned to at all by the
loop. Hint: the built-in function <a href="range.htm"><strong>range</strong></a> returns a sequence of
integers suitable to emulate the effect of Pascal&#8217;s
<code>for i := a to b do</code>; e.g., <code>range(3)</code> returns the list <code>[0, 1, 2]</code>.</p><p><strong>Warning:</strong> There is a subtlety when the sequence is being modified
by the loop (this can only occur for mutable sequences,
such as lists). An internal counter is used to keep track of which item
is used next, and this is incremented on each iteration. When this
counter has reached the length of the sequence the loop
terminates. This means that if the suite deletes the current (or a
previous) item from the sequence, the next item will be skipped (since
it gets the index of the current item which has already been
treated). Likewise, if the suite inserts an item in the sequence
before the current item, the current item will be treated again the
next time through the loop. This can lead to nasty bugs that can be
avoided by making a temporary copy using a slice of the whole
sequence, e.g.,</p><pre class="python"><span class="pykeyword">for</span> x <span class="pykeyword">in</span> a[:]:
    <span class="pykeyword">if</span> x &lt; 0: a.remove(x)</pre><h2 id="the-for-clause">The for clause&#160;<a class="nav" href="#the-for-clause" title="bookmark!">#</a></h2><p>The <strong>for</strong> construct is also used in list comprehensions and generator expressions.</p><p>Syntax:</p><blockquote><p>&#8230; <strong>for</strong> <em><a href="syntax-target">target list</a></em> <strong>in</strong> <em><a href="syntax-expression">expression list</a></em> &#8230;</p></blockquote><p>See <a href="list-displays.htm"><strong>list-displays</strong></a> and <a href="generator-expressions.htm"><strong>generator-expressions</strong></a>.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div> <!-- yui-g --></div> <!-- content --> </div> <!-- yui-b --> </div> <!-- yui-main --> <div class="yui-b"> <div id='menu'> <ul> <li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li> <li><b><a href="." title="Go to pyref index page.">::: pyref :::</a></b></li> </ul> <ul><li><b>::: contents</b></li></ul> <ul><li><ul><li><a href="#the-for-clause">The for clause</a></li></ul></li></ul> </div> <!-- menu --> </div> <!-- yui-b --> </div> <!-- bd --> <div id="ft"> <!-- footer --> <p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;"></a>
this page was rendered by a <a href="http://www.djangoproject.com/">django</a> application in 0.01s 2012-06-18 18:08:20.158245.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p> </div> <!-- ft --> </div> <!-- doc --> <script src="/media/js/effbot-min.js" type="text/javascript"> </script> </body> </html>
