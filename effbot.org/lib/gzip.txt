
@@module gzip

<h1>gzip&#8212;Support for gzip files</h1>

<p>The data compression provided by the {@code zlib} module is
compatible with that used by the GNU compression program gzip.
Accordingly, the {@link gzip} module provides the {@link GzipFile} class
to read and write gzip-format files, automatically compressing or
decompressing the data so it looks like an ordinary file object. Note
that additional file formats which can be decompressed by the gzip and
gunzip programs, such as those produced by compress and pack, are not
supported by this module.

<p>The module defines the following items:

@@class GzipFile([filename[, mode[, compresslevel[, fileobj]]]])

<p>Constructor for the {@link GzipFile} class, which simulates most of
the methods of a file object, with the exception of the {@link readinto}
and {@link truncate} methods. At least one of {@var fileobj} and {@var
filename} must be given a non-trivial value.

<p>The new class instance is based on {@var fileobj}, which can be a
regular file, a {@link StringIO} object, or any other object which
simulates a file. It defaults to {@code None}, in which case {@var
filename} is opened to provide a file object.

<p>When {@var fileobj} is not {@link None}, the {@var filename} argument
is only used to be included in the gzip file header, which may includes
the original filename of the uncompressed file. It defaults to the
filename of {@var fileobj}, if discernible; otherwise, it defaults to
the empty string, and in this case the original filename is not included
in the header.

<p>The {@var mode} argument can be any of {@code 'r'}, {@code 'rb'},
{@code 'a'}, {@code 'ab'}, {@code 'w'}, or {@code 'wb'}, depending on
whether the file will be read or written. The default is the mode of
{@var fileobj} if discernible; otherwise, the default is {@code 'rb'}.
If not given, the 'b' flag will be added to the mode to ensure the file
is opened in binary mode for cross-platform portability.

<p>The {@var compresslevel} argument is an integer from {@code 1} to
{@code 9} controlling the level of compression; {@code 1} is fastest and
produces the least compression, and {@code 9} is slowest and produces
the most compression. The default is {@code 9}.

<p>Calling a {@link GzipFile} object's {@link close} method does not
close {@var fileobj}, since you might wish to append more material after
the compressed data. This also allows you to pass a {@link StringIO}
object opened for writing as {@var fileobj}, and retrieve the resulting
memory buffer using the {@link StringIO} object's {@link getvalue}
method.

@@function open(filename[, mode[, compresslevel]])

<p>This is a shorthand for {@code GzipFile(}{@var filename}, {@var
mode}, {@var compresslevel}). The {@var filename} argument is required;
{@var mode} defaults to {@code 'rb'} and {@var compresslevel} defaults
to {@code 9}.

@@text 

@see 
{@link zlib Module zlib}

The basic data compression module needed to support the gzip file
format.
