<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>How can I sort one list by values from another&nbsp;list?</title></head><body data-page-id="769"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">How can I sort one list by values from another&nbsp;list?</h1></div><div class="yui-ge"><div class="yui-u first"><p>Merge them into a single list of tuples, sort the resulting list, and then pick out the element you want.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">&gt;&gt;&gt; list1 = [<span class="pystring">"what"</span>, <span class="pystring">"I'm"</span>, <span class="pystring">"sorting"</span>, <span class="pystring">"by"</span>]
&gt;&gt;&gt; list2 = [<span class="pystring">"something"</span>, <span class="pystring">"else"</span>, <span class="pystring">"to"</span>, <span class="pystring">"sort"</span>]
&gt;&gt;&gt; pairs = zip(list1, list2)
&gt;&gt;&gt; pairs
[(<span class="pystring">'what'</span>, <span class="pystring">'something'</span>), (<span class="pystring">"I'm"</span>, <span class="pystring">'else'</span>), (<span class="pystring">'sorting'</span>, <span class="pystring">'to'</span>), (<span class="pystring">'by'</span>, <span class="pystring">'sort'</span>)]
&gt;&gt;&gt; pairs.sort()
&gt;&gt;&gt; result = [ x[1] <span class="pykeyword">for</span> x <span class="pykeyword">in</span> pairs ]
&gt;&gt;&gt; result
[<span class="pystring">'else'</span>, <span class="pystring">'sort'</span>, <span class="pystring">'to'</span>, <span class="pystring">'something'</span>]</pre></div><div class="yui-ge"><div class="yui-u first"><p>An alternative for the last step is:</p><pre class="python">result = []
<span class="pykeyword">for</span> p <span class="pykeyword">in</span> pairs: result.append(p[1])</pre><p>If you find this more legible, you might prefer to use this instead of the final list comprehension. However, it is almost twice as slow for long lists. Why? First, the <a href="/pyref/list.append.htm"><strong>append</strong></a> operation has to reallocate memory, and while it uses some tricks to avoid doing that each time, it still has to do it occasionally, and that costs quite a bit. Second, the expression &#8220;result.append&#8221; requires an extra attribute lookup, and third, there&#8217;s a speed reduction from having to make all those method calls.</p><p>CATEGORY: programming</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
