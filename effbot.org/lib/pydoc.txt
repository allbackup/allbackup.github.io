
@@module pydoc

<h1>pydoc&#8212;Documentation generator and online help system</h1>

<p>New in version 2.1.

<p>The {@link pydoc} module automatically generates documentation from
Python modules. The documentation can be presented as pages of text on
the console, served to a Web browser, or saved to HTML files.

<p>The built-in function {@link help} invokes the online help system in
the interactive interpreter, which uses {@link pydoc} to generate its
documentation as text on the console. The same text documentation can
also be viewed from outside the Python interpreter by running pydoc as a
script at the operating system's command prompt. For example, running

<pre>
pydoc sys
</pre>


<p>at a shell prompt will display documentation on the {@link sys}
module, in a style similar to the manual pages shown by the Unix man
command. The argument to pydoc can be the name of a function, module, or
package, or a dotted reference to a class, method, or function within a
module or module in a package. If the argument to pydoc looks like a
path (that is, it contains the path separator for your operating system,
such as a slash in Unix), and refers to an existing Python source file,
then documentation is produced for that file.

<p>Specifying a -w flag before the argument will cause HTML
documentation to be written out to a file in the current directory,
instead of displaying text on the console.

<p>Specifying a -k flag before the argument will search the synopsis
lines of all available modules for the keyword given as the argument,
again in a manner similar to the Unix man command. The synopsis line of
a module is the first line of its documentation string.

<p>You can also use pydoc to start an HTTP server on the local machine
that will serve documentation to visiting Web browsers. pydoc -p 1234
will start a HTTP server on port 1234, allowing you to browse the
documentation at {@code http://localhost:1234/} in your preferred Web
browser. pydoc -g will start the server and additionally bring up a
small {@link Tkinter}-based graphical interface to help you search for
documentation pages.

<p>When pydoc generates documentation, it uses the current environment
and path to locate modules. Thus, invoking pydoc spam documents
precisely the version of the module you would get if you started the
Python interpreter and typed "{@code import spam}".

<p>Module docs for core modules are assumed to reside in {@link
http://www.python.org/doc/current/lib/}. This can be overridden by
setting the PYTHONDOCS environment variable to a different URL or to a
local directory containing the Library Reference Manual pages.
