<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>list.sort</title><script type="text/javascript">effbot_page_id=1369;</script></head><body><div id="doc2" class="yui-t2"><div id="hd"><!-- header --></div><!-- hd --><div id="bd"><!-- body --><p class="note" style="text-align: center"><strong>

We're back after a server migration that caused effbot.org to fall
over a bit harder than expected.  Expect some glitches.

</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">list.sort</h1></div><!-- yui-g --><body><p><code>s.sort([cmp[, key[, reverse]]])</code> sort the items of s in place.</p>

<p>The <strong>list.sort</strong> and <a href="list.reverse.htm"><strong>list.reverse</strong></a> methods modify the list in
place for economy of space when sorting or reversing a large list. To
remind you that they operate by side effect, they don&#8217;t return the
sorted or reversed list.</p>

<p>The optional <em>cmp</em> argument specifies a custom comparison function of
two arguments (list items) which should return a negative, zero or
positive number depending on whether the first argument is considered
smaller than, equal to, or larger than the second argument:
&#8220;cmp=lambda x,y: cmp(x.lower(), y.lower())&#8221;</p>

<p>The optional <em>key</em> argument specifies a function of one argument that
is used to extract a comparison key from each list element:
&#8220;key=str.lower&#8221;</p>

<p>The optional <em>reverse</em> is a boolean value. If true, the list elements
are sorted as if each comparison were reversed.</p>

<p>In general, the <em>key</em> and <em>reverse</em> conversion processes are much
faster than specifying an equivalent <em>cmp</em> function.  This is because
cmp is called multiple times for each list element while key and
reverse touch each element only once.</p>

<p>Starting with Python 2.3, the <strong>list.sort</strong> method is guaranteed to be
stable. A sort is stable if it guarantees not to change the relative
order of elements that compare equal &#8212; this is helpful for sorting in
multiple passes (for example, sort by department, then by salary
grade).</p>

<p>While a list is being sorted, the effect of attempting to mutate, or
even inspect, the list is undefined. The C implementation of Python
2.3 and newer makes the list appear empty for the duration, and raises
<a href="ValueError.htm"><strong>ValueError</strong></a> if it can detect that the list has been mutated during a
sort.</p>

<p>Changed in version 2.3: Support for <a href="None.htm"><strong>None</strong></a> as an equivalent to
omitting cmp was added.</p>

<p>Changed in version 2.4: Support for key and reverse was added.</p></body><div class="yui-g"></div><!-- yui-g --></div><!-- content --></div><!-- yui-b --></div><!-- yui-main --><div class="yui-b"><div id='menu'></div><!-- menu --></div><!-- yui-b --></div><!-- bd --><div id="ft"><!-- footer --></div><!-- ft --></div><!-- doc --><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
