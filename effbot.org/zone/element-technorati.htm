<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>A Simple Technorati&nbsp;Client</title></head><body data-page-id="93"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">A Simple Technorati&nbsp;Client</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">May 13, 2003 | Fredrik Lundh</p><p>The following is a minimal technorati client, using the generic
<a href="http-xml.htm">HTTPClient</a> class and the <a href="element-index.htm">ElementTree</a> library.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> HTTPClient <span class="pykeyword">import</span> HTTPClient
<span class="pykeyword">from</span> elementtree.HTMLTreeBuilder <span class="pykeyword">import</span> TreeBuilder
<span class="pykeyword">from</span> urllib <span class="pykeyword">import</span> urlencode

<span class="pykeyword">class</span> <span class="pyclass">TechnoratiClient</span>(HTTPClient):

    <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self, apikey):
        self.apikey = apikey
        HTTPClient.__init__(self, <span class="pystring">"http://api.technorati.com"</span>)

    <span class="pykeyword">def</span> <span class="pyfunction">__getattr__</span>(self, method):
        <span class="pykeyword">def</span> <span class="pyfunction">method</span>(_self=self, _method=method, **params):
            <span class="pykeyword">return</span> _self.do_request(<span class="pystring">""</span>, path=<span class="pystring">"/%s?%s&amp;key=%s"</span> % (
                _method, urlencode(params), _self.apikey
                ), method=<span class="pystring">"GET"</span>, parser=TreeBuilder())
        <span class="pykeyword">return</span> method</pre></div><div class="yui-ge"><div class="yui-u first"><p>Note that I&#8217;m using the HTMLTreeBuilder instead of the default
XML parser.  The reason for this is that the XML generated by the
technorati service can contain HTML character entities (defined by
<a href="http://api.technorati.com/dtd/tapi-001.xml">an external
DTD</a>).  If you pass the technorati data to the standard parser,
it will most likely complain about unknown entities.</p><p>Here&#8217;s how to use this class to get the technorati cosmos for
<a href="http://online.effbot.org">online.effbot.org</a>:</p><pre class="python">
&gt;&gt;&gt; client = TechnoratiClient(<span class="pystring">"...your api key..."</span>)

&gt;&gt;&gt; tree = client.cosmos(url=<span class="pystring">"online.effbot.org"</span>)

&gt;&gt;&gt; <span class="pykeyword">import</span> sys
&gt;&gt;&gt; tree.write(sys.stdout)</pre><pre class="xml">
&lt;<span class="pyfunction">tapi</span> version="0.9"&gt;
&lt;<span class="pyfunction">document</span>&gt;
&lt;<span class="pyfunction">result</span>&gt;
  &lt;<span class="pyfunction">url</span>&gt;http://online.effbot.org&lt;/<span class="pyfunction">url</span>&gt;
  &lt;<span class="pyfunction">weblog</span>&gt;
    &lt;<span class="pyfunction">name</span>&gt;online.effbot.org&lt;/<span class="pyfunction">name</span>&gt;
    &lt;<span class="pyfunction">url</span>&gt;http://online.effbot.org&lt;/<span class="pyfunction">url</span>&gt;
    &lt;<span class="pyfunction">rssurl</span>&gt;http://online.effbot.org/rss.xml&lt;/<span class="pyfunction">rssurl</span>&gt;
    &lt;<span class="pyfunction">inboundblogs</span>&gt;8&lt;/<span class="pyfunction">inboundblogs</span>&gt;
    &lt;<span class="pyfunction">inboundlinks</span>&gt;13&lt;/<span class="pyfunction">inboundlinks</span>&gt;
    &lt;<span class="pyfunction">lastupdate</span>&gt;1970-01-01 00:33:23 GMT&lt;/<span class="pyfunction">lastupdate</span>&gt;
  &lt;/<span class="pyfunction">weblog</span>&gt;
  &lt;<span class="pyfunction">inboundblogs</span>&gt;8&lt;/<span class="pyfunction">inboundblogs</span>&gt;
  &lt;<span class="pyfunction">inboundlinks</span>&gt;13&lt;/<span class="pyfunction">inboundlinks</span>&gt;
  &lt;<span class="pyfunction">rankingstart</span>&gt;1&lt;/<span class="pyfunction">rankingstart</span>&gt;
&lt;/<span class="pyfunction">result</span>&gt;
&lt;<span class="pyfunction">item</span>&gt;
  &lt;<span class="pyfunction">weblog</span>&gt;
    &lt;<span class="pyfunction">name</span>&gt;PyZine RE: Bryan&lt;/<span class="pyfunction">name</span>&gt;
    &lt;<span class="pyfunction">url</span>&gt;http://www.pyzine.com&lt;/<span class="pyfunction">url</span>&gt;
    &lt;<span class="pyfunction">rssurl</span> /&gt;
...</pre><pre class="python">
&gt;&gt;&gt; <span class="pykeyword">for</span> item <span class="pykeyword">in</span> tree.getiterator(<span class="pystring">"item"</span>):
...     <span class="pykeyword">print</span> item.find(<span class="pystring">"weblog"</span>).findtext(<span class="pystring">"name"</span>)
...</pre><pre>
PyZine RE: Bryan
PyZine RE: Bryan
PyZine RE: Bryan
PyZine RE: Bryan
Zope Notes
Zope Notes
Small Values of Cool
Joao Prado Maia's weblog
Python owns us
...
</pre><p>You can find a full list of Technorati methods <a href="http://www.sifry.com/alerts/archives/000288.html#000288">here</a>.
Just call the corresponding client method, and pass in the parameters
as keyword arguments.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
