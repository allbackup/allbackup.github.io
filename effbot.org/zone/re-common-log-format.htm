<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Common Log&nbsp;Format</title></head><body data-page-id="248"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Common Log&nbsp;Format</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">March 2004 | Fredrik Lundh</p><p>Here&#8217;s a simple regular expression that can be used to parse server log files, in the <i>Common Log Format</i>.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python example wide wide">
p = re.compile(
    <span class="pystring">'([^ ]*) ([^ ]*) ([^ ]*) \[([^]]*)\] "([^"]*)" ([^ ]*) ([^ ]*)'</span>
    )

<span class="pykeyword">for</span> line <span class="pykeyword">in</span> file.readlines():
    m = p.match(line)
    <span class="pykeyword">if</span> <span class="pykeyword">not</span> m:
        <span class="pykeyword">continue</span>
    host, ignore, user, date, request, status, size = m.groups()
    ...</pre></div><div class="yui-ge"><div class="yui-u first"><p>Here&#8217;s a variation that parses the <i>Extended Common Log Format</i>, which
contains additional referrer and user-agent fields.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python example wide wide">
p = re.compile(
    <span class="pystring">'([^ ]*) ([^ ]*) ([^ ]*) \[([^]]*)\] "([^"]*)" ([^ ]*) ([^ ]*)'</span>
    <span class="pystring">' "([^"]*)" "([^"]*)"'</span> <span class="pycomment"># extensions</span>
    )


<span class="pykeyword">for</span> line <span class="pykeyword">in</span> file.readlines():
    m = p.match(line)
    <span class="pykeyword">if</span> <span class="pykeyword">not</span> m:
        <span class="pykeyword">continue</span>
    host, ignore, user, date, request, status, size,
        referer, agent = m.groups()
    ...</pre></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
