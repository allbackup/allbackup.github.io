<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Tkinter Scrollbar&nbsp;Patterns</title></head><body data-page-id="317"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Tkinter Scrollbar&nbsp;Patterns</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">September 20, 2003 | Fredrik Lundh</p><p>Tkinter provides a number of scrollable widgets, but unlike many
other toolkits, the widgets do not maintain their own scrollbars.  To
add a scrollbar to a scrollable widget, you have to create separate <a href="/tag/Tkinter.Scrollbar"><b>Scrollbar</b></a> widget instances,
and attach them to the widget.  This article explains how the scrollbar
interface works, and shows you how to add scrollbars to standard
widgets.</p><h2 id="the-scrollbar-interface">The Scrollbar Interface&#160;<a class="nav" href="#the-scrollbar-interface" title="bookmark!">#</a></h2><p>In Tkinter, the scrollbar is a separate widget that can be attached
to any widget that support the standard scrollbar interface.  Such
widgets include:</p><ul><li>the <a href="/tag/Tkinter.Listbox"><b>Listbox</b></a> widget.</li><li>the <a href="/tag/Tkinter.Text"><b>Text</b></a> widget.</li><li>the <a href="/tag/Tkinter.Canvas"><b>Canvas</b></a> widget</li><li>the <a href="/tag/Tkinter.Entry"><b>Entry</b></a> widget</li></ul><p>To attach a scrollbar to a scrolled widget, set the scrollbar&#8217;s
<b>command</b> option to point to a method that will be called when
the scrollbar is changed, and set the widget&#8217;s scroll command option
to the scrollbar&#8217;s <b>set</b> method.  This method is called by the
widget when when the view is changed (for example, when new items are
added, or the widget is resized).</p><p>In standard Tkinter, these methods and options have standard names;
the scrollbar should call the widget&#8217;s <b>xview</b> or <b>yview</b>
method when the scrollbar is changed, and the widgets provide
<b>xscrollcommand</b> and <b>yscrollcommand</b> command options that
are called when the scrollbar needs to be updated.</p><p>In the following example, a listbox containing 100 integers is
equipped with a scrollbar:</p><div class="example">
<b>Example: A listbox with a scrollbar</b>
<pre class="python">
<span class="pykeyword">from</span> Tkinter <span class="pykeyword">import</span> *

root = Tk()

scrollbar = Scrollbar(root)
scrollbar.pack(side=RIGHT, fill=Y)

listbox = Listbox(root)
listbox.pack()

<span class="pykeyword">for</span> i <span class="pykeyword">in</span> range(100):
    listbox.insert(END, i)

<span class="pycomment"># attach listbox to scrollbar</span>
listbox.config(yscrollcommand=scrollbar.set)
scrollbar.config(command=listbox.yview)

mainloop()</pre></div><blockquote>
<img alt="" height="193" src="data:image/png;base64, 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 " width="152" />
</blockquote><p>To watch the traffic between the listbox and the scrollbar, you can
replace the <b>Scrollbar</b> and <b>Listbox</b> classes with versions
that log the relevant method calls:</p><pre class="python">
<span class="pykeyword">class</span> <span class="pyclass">DebugScrollbar</span>(Scrollbar):
    <span class="pykeyword">def</span> <span class="pyfunction">set</span>(self, *args):
        <span class="pykeyword">print</span> <span class="pystring">"SCROLLBAR SET"</span>, args
        Scrollbar.set(self, *args)

<span class="pykeyword">class</span> <span class="pyclass">DebugListbox</span>(Listbox):
    <span class="pykeyword">def</span> <span class="pyfunction">yview</span>(self, *args):
        <span class="pykeyword">print</span> <span class="pystring">"LISTBOX YVIEW"</span>, args
        Listbox.yview(self, *args)

scrollbar = DebugScrollbar()
scrollbar.pack(side=RIGHT, fill=Y)

listbox = DebugListbox(yscrollcommand=scrollbar.set)
listbox.pack()

scrollbar.config(command=listbox.yview)</pre><p>When you run the example using these widgets, you&#8217;ll get a stream
of SCROLLBAR and LISTBOX messages in the console window.</p><p>When the listbox is first displayed, the listbox calls the
scrollbar to inform it about the current view (in this example, 10 out
of 100 lines are displayed).  The scrollbar calls back, telling the
listbox that the scrollbar is in its topmost position:</p><pre>
SCROLLBAR SET ('0', '0.1')
LISTBOX YVIEW ('moveto', '0')
</pre><p>Note that all arguments are strings, and that the values are
normalized to fit in the 0.0 to 1.0 range.</p><p>When you move the scrollbar thumb, the scrollbar sends
<b>moveto</b> messages to the listbox.  The listbox updates the view,
and calls the scrollbar&#8217;s <b>set</b> method with the resulting
values:</p><pre>
LISTBOX YVIEW ('moveto', '0.1041')
SCROLLBAR SET ('0.1', '0.2')
LISTBOX YVIEW ('moveto', '0.186')
SCROLLBAR SET ('0.19', '0.29')
LISTBOX YVIEW ('moveto', '0.3124')
SCROLLBAR SET ('0.31', '0.41')
LISTBOX YVIEW ('moveto', '0.4166')
SCROLLBAR SET ('0.42', '0.52')
</pre><p>Note that the listbox rounds the scrollbar value to the nearest
full line.</p><p>If you click outside the scrollbar thumb, the scrollbar generates
<b>scroll</b> events.</p><pre>
LISTBOX YVIEW ('scroll', '1', 'pages')
SCROLLBAR SET ('0.5', '0.6')
LISTBOX YVIEW ('scroll', '1', 'pages')
SCROLLBAR SET ('0.58', '0.68')
LISTBOX YVIEW ('scroll', '1', 'units')
SCROLLBAR SET ('0.59', '0.69')
LISTBOX YVIEW ('scroll', '1', 'units')
SCROLLBAR SET ('0.6', '0.7')
</pre><p>For <b>scroll</b> events, the scrollbar provides both a value and a
unit, and it&#8217;s up to the listbox to interpret the units in a way that
makes sense to the user.  The value is usually -1 (scroll up/left) or
1 (scroll down/right), and the unit is either <b>pages</b> or
<b>units</b>.</p><p>In a listbox, the basic <b>unit</b> is usually a single item, and a
<b>page</b> is as many items that fit into the widget&#8217;s window.  Other
widgets may use different definitions.</p><h2 id="patterns">Patterns&#160;<a class="nav" href="#patterns" title="bookmark!">#</a></h2><h3 id="listbox">Adding Scrollbars to Listbox Widgets&#160;<a class="nav" href="#listbox" title="bookmark!">#</a></h3><p>We&#8217;ve already seen how to add scrollbars to a listbox widget, but
here&#8217;s the relevant part again:</p><pre class="python">
scrollbar = Scrollbar(master)
scrollbar.pack(side=RIGHT, fill=Y)

listbox = Listbox(master, yscrollcommand=scrollbar.set)
listbox.pack()

scrollbar.config(command=listbox.yview)</pre><blockquote>
<img alt="" height="193" src="data:image/png;base64, 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 " width="152" />
</blockquote><p>Note that this example uses <b>pack</b> to add the scrollbar and
the listbox to the parent widget.  This can get extremely tricky if
you plan to add more than just a scrolled listbox to the parent; to
solve this, you can either use <b>grid</b> to get the individual
widgets in their right location, or pack the widgets into an extra
frame, and use <b>pack</b> or <b>grid</b> to put the frame where you
want it.</p><p>Another problem with the original example is that the scrollbar has
no border, but the standard listbox is drawn with a &#8220;sunken&#8221;
appearance.  At least on Windows, things look a lot better if the
listbox contents and the scrollbar are placed at the same level.  In
the following example, I&#8217;ve removed the border from the listbox (by
setting the border width to zero), and added a border to the extra
frame widget:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
frame = Frame(root, bd=2, relief=SUNKEN)

scrollbar = Scrollbar(frame)
scrollbar.pack(side=RIGHT, fill=Y)

listbox = Listbox(frame, bd=0, yscrollcommand=scrollbar.set)
listbox.pack()

scrollbar.config(command=listbox.yview)

frame.pack()</pre></div><div class="yui-ge"><div class="yui-u first"><blockquote>
<img alt="" height="193" src="data:image/png;base64, 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 " width="152" />
</blockquote><p>The <b>Listbox</b> widget also supports horizontal scrolling.  For
examples, see the next section.</p><h3 id="text">Adding Scrollbars to Text Widgets&#160;<a class="nav" href="#text" title="bookmark!">#</a></h3><p>The <b>Text</b> widget implements the same scrollbar interface as
the listbox; create the scrollbar, and attach it to the text widget by
setting the appropriate options:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
scrollbar = Scrollbar(master)
scrollbar.pack(side=RIGHT, fill=Y)

text = Text(master, wrap=WORD, yscrollcommand=scrollbar.set)
text.pack()

scrollbar.config(command=text.yview)</pre></div><div class="yui-ge"><div class="yui-u first"><p>The <b>wrap</b> option controls how to handle long lines in the
text widget.  The default value is CHAR, which tells the widget that
it&#8217;s okay to add line breaks between individual characters, for lines
that are longer than the widget is wide.  If you&#8217;re displaying text in
the widget, it&#8217;s usually better to set the <b>wrap</b> option to WORD,
like in the example above.  This tells the widget to avoid breaking
lines inside words.</p><blockquote>
<img alt="" height="342" src="/media/cache/768bf3f9f4d6b16a9e9d6247fcbdac5a.png" width="488" />
</blockquote><p>You can also switch off line wrapping, by setting the <b>wrap</b>
option to NONE.  When you do, lines that are longer than the widget is
wide will be truncated.  To allow the user to display wide text, you
can add a second, horizontal scrollbar:</p><pre class="python">
xscrollbar = Scrollbar(master, orient=HORIZONTAL)
xscrollbar.pack(side=BOTTOM, fill=X)

yscrollbar = Scrollbar(master)
yscrollbar.pack(side=RIGHT, fill=Y)

text = Text(master, wrap=NONE,
            xscrollcommand=xscrollbar.set,
            yscrollcommand=yscrollbar.set)
text.pack()

xscrollbar.config(command=text.xview)
yscrollbar.config(command=text.yview)</pre><p>Note that by using <b>pack</b> to display the widgets, you&#8217;ll end
up with either a horizontal scrollbar that&#8217;s wider than the text
widget, or a vertical scrollbar that&#8217;s taller than the text widget.
You can probably get around this by packing a small frame in the lower
left corner, and use additional frames to get the right grouping, but
it&#8217;s easier to put everything in a separate frame, and use the
<b>grid</b> manager to display the widgets:</p><pre class="python">
frame = Frame(master, bd=2, relief=SUNKEN)

frame.grid_rowconfigure(0, weight=1)
frame.grid_columnconfigure(0, weight=1)

xscrollbar = Scrollbar(frame, orient=HORIZONTAL)
xscrollbar.grid(row=1, column=0, sticky=E+W)

yscrollbar = Scrollbar(frame)
yscrollbar.grid(row=0, column=1, sticky=N+S)

text = Text(frame, wrap=NONE, bd=0,
            xscrollcommand=xscrollbar.set,
            yscrollcommand=yscrollbar.set)

text.grid(row=0, column=0, sticky=N+S+E+W)

xscrollbar.config(command=text.xview)
yscrollbar.config(command=text.yview)

frame.pack()</pre><p>Note the use of <b>grid_rowconfigure</b> and
<b>grid_columnconfigure</b>.  If you leave out those calls, the widget
won&#8217;t behave properly if you pack the frame into an expanding parent;
if the parent is made smaller, the scrollbars may disappear out of
sight.  If the parent is made larger, you&#8217;ll end up with lots of
padding.</p><h3 id="canvas">Adding Scrollbars to Canvas Widgets&#160;<a class="nav" href="#canvas" title="bookmark!">#</a></h3><p>As expected, the <b>Canvas</b> widget also implements the standard
scrollbar interface, but with a twist.  Here&#8217;s an example:</p><pre class="python">
frame = Frame(root, bd=2, relief=SUNKEN)

frame.grid_rowconfigure(0, weight=1)
frame.grid_columnconfigure(0, weight=1)

xscrollbar = Scrollbar(frame, orient=HORIZONTAL)
xscrollbar.grid(row=1, column=0, sticky=E+W)

yscrollbar = Scrollbar(frame)
yscrollbar.grid(row=0, column=1, sticky=N+S)

canvas = Canvas(frame, bd=0,
                xscrollcommand=xscrollbar.set,
                yscrollcommand=yscrollbar.set)

canvas.grid(row=0, column=0, sticky=N+S+E+W)

xscrollbar.config(command=canvas.xview)
yscrollbar.config(command=canvas.yview)

frame.pack()</pre><p>If you leave it like this, you get a nice scrolling canvas, but the
scrollbars do not behave like expected; the scrollbar thumbs stay small
and centered no matter how you scroll around.  The reason is that the
canvas coordinate space is unbounded; at any time, you&#8217;re only seeing
a very small fraction of the available coordinate space.</p><p>To fix this, you can tell the canvas to limit the scrolling to a
given area.  To do this, set the <b>scrollregion</b> option to a
rectangle (given as a 4-tuple).  For example, if you know that you&#8217;re
going to draw things in a 1000x1000 area, you can set the scroll
region when you create the canvas:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
canvas = Canvas(frame, bd=0, scrollregion=(0, 0, 1000, 1000),
                xscrollcommand=xscrollbar.set,
                yscrollcommand=yscrollbar.set)</pre></div><div class="yui-ge"><div class="yui-u first"><p>If you don&#8217;t know the scroll region until later, use the
<b>config</b> method to update the region:

<pre class="python">canvas.config(scrollregion=(left, top, right, bottom))</pre></p><p>You can use the <b>bbox</b> method to get a bounding box for a
given object, or a group of objects; <b>canvas.bbox(ALL)</b> returns
the bounding box for all objects on the canvas:</p><pre class="python">
canvas.config(scrollregion=canvas.bbox(ALL))</pre><h2>Patterns: A Scrolled Widget Helper</h2><p class="fixme">To be continued.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">def</span> <span class="pyfunction">Scrolled</span>(_widget, _master, _mode=<span class="pystring">'y'</span>, **options):
    frame = Frame(_master, bd=2, relief=SUNKEN)
    xscrollbar = yscrollbar = None
    <span class="pykeyword">if</span> <span class="pystring">'x'</span> <span class="pykeyword">in</span> _mode: xscrollbar = Scrollbar(frame, orient=HORIZONTAL)
    <span class="pykeyword">if</span> <span class="pystring">'y'</span> <span class="pykeyword">in</span> _mode: yscrollbar = Scrollbar(frame)
    <span class="pykeyword">if</span> <span class="pykeyword">not</span> options.has_key(<span class="pystring">"bd"</span>):
        options[<span class="pystring">"bd"</span>] = 0
    widget = _widget(frame, **options)
    ... grid the scrollbars <span class="pykeyword">and</span> the widget ...
    <span class="pykeyword">return</span> widget

widget = Scrolled(Listbox, master, ...options...)
widget = Scrolled(Text, master, ...options...)
widget = Scrolled(Canvas, master, <span class="pystring">'xy'</span>, ...options...)</pre></div><div class="yui-ge"><div class="yui-u first"><pre class="python">
<span class="pykeyword">def</span> <span class="pyfunction">ScrolledListbox</span>(master, _mode=<span class="pystring">'y'</span>, **options):
    <span class="pykeyword">return</span> Scrolled(Listbox, master, _mode, **options)

<span class="pykeyword">def</span> <span class="pyfunction">ScrolledText</span>(master, _mode=<span class="pystring">'y'</span>, **options):
    <span class="pykeyword">return</span> Scrolled(Text, master, _mode, **options)

<span class="pykeyword">def</span> <span class="pyfunction">ScrolledCanvas</span>(master, _mode=<span class="pystring">'xy'</span>, **options):
    <span class="pykeyword">return</span> Scrolled(Canvas, master, _mode, **options)

widget = ScrolledListbox(master, ...options...)
widget = ScrolledText(master, ...options...)
widget = ScrolledCanvas(master, ...options...)</pre></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul><ul><li><b>::: contents</b></li></ul><ul><li><ul><li><a href="#the-scrollbar-interface">The Scrollbar Interface</a></li><li><a href="#patterns">Patterns</a></li><li><ul><li><a href="#listbox">Adding Scrollbars to Listbox Widgets</a></li><li><a href="#text">Adding Scrollbars to Text Widgets</a></li><li><a href="#canvas">Adding Scrollbars to Canvas Widgets</a></li></ul></li></ul></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
