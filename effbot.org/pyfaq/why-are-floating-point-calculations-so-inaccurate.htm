<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Why are floating point calculations so&nbsp;inaccurate?</title></head><body data-page-id="928"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Why are floating point calculations so&nbsp;inaccurate?</h1></div><div class="yui-ge"><div class="yui-u first"><p>People are often very surprised by results like this:</p><pre class="python">&gt;&gt;&gt; 1.2-1.0
0.199999999999999996</pre><p>and think it is a bug in Python. It&#8217;s not. It&#8217;s a problem caused by the internal representation of floating point numbers, which uses a fixed number of binary digits to represent a decimal number. Some decimal numbers can&#8217;t be represented exactly in binary, resulting in small roundoff errors.</p><p>In decimal math, there are many numbers that can&#8217;t be represented with a fixed number of decimal digits, e.g. 1/3 = 0.3333333333&#8230;&#8230;.</p><p>In base 2, 1/2 = 0.1, 1/4 = 0.01, 1/8 = 0.001, etc. .2 equals 2/10 equals 1/5, resulting in the binary fractional number 0.001100110011001&#8230;</p><p>Floating point numbers only have 32 or 64 bits of precision, so the digits are cut off at some point, and the resulting number is 0.199999999999999996 in decimal, not 0.2.</p><p>A floating point&#8217;s <a href="/pyref/repr.htm"><strong>repr</strong></a> function prints as many digits are necessary to make <strong>eval(repr(</strong><em>f</em><strong>))</strong> == <em>f</em> true for any float <em>f</em>.  The <a href="/pyref/str.htm"><strong>str</strong></a> function prints fewer digits and this often results in the more sensible number that was probably intended:</p><pre class="python">&gt;&gt;&gt; 0.2
0.20000000000000001
&gt;&gt;&gt; <span class="pykeyword">print</span> 0.2
0.2</pre><p>Again, this has nothing to do with Python, but with the way the underlying C platform handles floating point numbers, and ultimately with the inaccuracy you&#8217;ll always have when writing down numbers as a string of a fixed number of digits.</p><p>One of the consequences of this is that it is dangerous to compare the result of some computation to a float with == ! Tiny inaccuracies may mean that == fails. Instead, you have to check that the difference between the two numbers is less than a certain threshold:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">epsilon = 0.0000000000001 <span class="pycomment"># Tiny allowed error</span>
expected_result = 0.4

<span class="pykeyword">if</span> expected_result-epsilon &lt;= computation() &lt;= expected_result+epsilon:
   ...</pre></div><div class="yui-ge"><div class="yui-u first"><p>Please see the chapter on <s><a href="http://docs.python.org/tut/node16.html">floating point arithmetic</a></s> (dead link) in the Python tutorial for more information.</p><p>CATEGORY: general</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
