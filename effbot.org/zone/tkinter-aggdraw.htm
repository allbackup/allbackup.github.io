<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Drawing Anti-Aliased Graphics Under&nbsp;Tkinter/Windows</title></head><body data-page-id="293"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Drawing Anti-Aliased Graphics Under&nbsp;Tkinter/Windows</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">Fredrik Lundh | October 2005 | Originally posted to <a href="http://online.effbot.org">online.effbot.org</a></p><p>I just posted <a href="aggdraw-index.htm">a new aggdraw alpha</a>,
which borrows some Windows-specific display code from PIL.  You can now
create a DIB-compatible drawing surface, draw to it as usual, and blit
it directly to screen, without having to convert it to a PIL image memory,
a PhotoImage object, or whatever image object your GUI toolkit is using.</p><p>Here&#8217;s an outline:</p><pre class="python">
<span class="pykeyword">import</span> aggdraw

dib = aggdraw.Dib(<span class="pystring">"RGB"</span>, (800, 600))

... draw into the dib, <span class="pykeyword">as</span> usual ...

dib.expose(handle) <span class="pycomment"># in 1.2a1</span>
dib.expose(hwnd=handle) <span class="pycomment"># in 1.2a2</span></pre><p>(<i>Note: the 1.2a1 release takes a single positional argument,
but the upcoming 1.2a2 requires a keyword argument.</i>)</p><p>The <b>handle</b> in this example is a Windows HWND for the window you
want to draw into; under Tkinter, you can use the <b>winfo_id()</b> method
to get this.  The <b>Dib</b> object implements
<a href="http://effbot.org/zone/pythondoc-aggdraw.htm#aggdraw.Draw-class">all the usual Draw methods</a>; the only difference between a <b>Draw</b> instance
and a <b>Dib</b> instance is that the latter uses a shared memory buffer, and
knows how to copy itself to a window.</p><p>Here&#8217;s a somewhat larger example, using Tkinter:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">import</span> aggdraw
<span class="pykeyword">import</span> random
<span class="pykeyword">import</span> Tkinter

root = Tkinter.Tk()

size = 400, 300

<span class="pycomment"># create a Dib surface</span>
draw = aggdraw.Dib(<span class="pystring">"RGB"</span>, size)

<span class="pycomment"># draw something</span>
x0 = random.randint(0, size[0])
y0 = random.randint(0, size[1])
<span class="pykeyword">for</span> i <span class="pykeyword">in</span> range(500):
    x1 = random.randint(0, size[0])
    y1 = random.randint(0, size[1])
    draw.line((x0, y0, x1, y1), aggdraw.Pen(<span class="pystring">"black"</span>))
    x0 = x1; y0 = y1

<span class="pycomment"># display the image</span>
frame = Tkinter.Frame(root, width=size[0], height=size[1], bg=<span class="pystring">""</span>)
frame.bind(<span class="pystring">"&lt;Expose&gt;"</span>, <span class="pykeyword">lambda</span> e: draw.expose(hwnd=e.widget.winfo_id()))
frame.pack()

frame.mainloop()</pre></div><div class="yui-ge"><div class="yui-u first"><blockquote>
<img alt="" height="320" src="/media/cache/08c5dc8a3756caac705b020f6ea879cc.jpg" width="400" />
</blockquote><p>In this example, the <b>&lt;Expose&gt;</b> binding makes sure that
the widget is properly redrawn, when needed.  The <b>bg=&#8221;&#8220;</b> setting
tells Tkinter not to draw any background into this window.  If you&#8217;re
using the WCK instead, put the expose code in the <b>repair</b> hook.</p><p>To display aggdraw images under Tkinter on other platforms, you can
use PIL&#8217;s
<a href="/imagingbook/imagetk.htm">ImageTk.PhotoImage</a>
object, or
<a href="wck.htm">the WCK toolkit</a>.  See
<a href="wck-aggview.htm"><i>An AggDraw-based WCK View</i></a>
for an example on how to use the latter.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
