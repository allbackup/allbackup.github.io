<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>Getting the Size of an Image on a Web&nbsp;Page</title></head><body data-page-id="188"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">Getting the Size of an Image on a Web&nbsp;Page</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">July 27, 2002 | Fredrik Lundh</p><p>
<i>Q. I need to dynamically access a webpage and find the largest
graphic used on that page, so I tried the following&#8230;</i>
</p><p>Largest as in &#8220;number of pixels&#8221;, or &#8220;number of bytes&#8221;?</p><p>If you want to get the size in bytes, you don&#8217;t need to decode
the image at all; just grab the data, and use the len() function
to get the number of bytes.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">import</span> urllib

<span class="pykeyword">def</span> <span class="pyfunction">getsize</span>(uri):
    file = urllib.urlopen(url)
    <span class="pykeyword">return</span> len(file.read())

<span class="pykeyword">print</span> getsize(<span class="pystring">"http://www.pythonware.com/images/small-yoyo.gif"</span>)
<span class="pycomment"># 10965</span></pre></div><div class="yui-ge"><div class="yui-u first"><p>If you don&#8217;t want to load the entire image, check the header
instead:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">import</span> urllib

<span class="pykeyword">def</span> <span class="pyfunction">getsize</span>(uri):
    file = urllib.urlopen(uri)
    size = file.headers.get(<span class="pystring">"content-length"</span>)
    file.close()
    <span class="pykeyword">return</span> int(size)

<span class="pykeyword">print</span> getsize(<span class="pystring">"http://www.pythonware.com/images/small-yoyo.gif"</span>)
<span class="pycomment"># 10965</span></pre></div><div class="yui-ge"><div class="yui-u first"><p>(In theory, some servers may not set the content-length header,
so it could be a good idea to fall back on len(file.read()) if the
get method returns None).</p><p>Note that <b>urllib</b> always uses the HTTP GET method; to be
a bit nicer to the server, you can use the HTTP HEAD method instead.
This helper shows you how to do that:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">import</span> httplib, urlparse

<span class="pykeyword">def</span> <span class="pyfunction">getsize</span>(uri):

    <span class="pycomment"># check the uri</span>
    scheme, host, path, params, query, fragment = urlparse.urlparse(uri)
    <span class="pykeyword">if</span> scheme != <span class="pystring">"http"</span>:
        <span class="pykeyword">raise</span> ValueError(<span class="pystring">"only supports HTTP requests"</span>)
    <span class="pykeyword">if</span> <span class="pykeyword">not</span> path:
        path = <span class="pystring">"/"</span>
    <span class="pykeyword">if</span> params:
        path = path + <span class="pystring">";"</span> + params
    <span class="pykeyword">if</span> query:
        path = path + <span class="pystring">"?"</span> + query

    <span class="pycomment"># make a http HEAD request</span>
    h = httplib.HTTP(host)
    h.putrequest(<span class="pystring">"HEAD"</span>, path)
    h.putheader(<span class="pystring">"Host"</span>, host)
    h.endheaders()

    status, reason, headers = h.getreply()

    h.close()

    <span class="pykeyword">return</span> headers.get(<span class="pystring">"content-length"</span>)

<span class="pykeyword">print</span> getsize(<span class="pystring">"http://www.pythonware.com/images/small-yoyo.gif"</span>)
<span class="pycomment"># 10965</span></pre></div><div class="yui-ge"><div class="yui-u first"><p class="fixme"><b>Note:</b>
The urllib2 library provides an easier way to do HEAD requests.  See
<a href="pyzone-archive.htm#examples">this page</a> for an example.</p><p>If you want to get the size in pixels, use the
<a href="http://effbot.org/imagingbook/imagefile.htm"><b>ImageFile.Parser</b></a>
class or the <b>ImageFileIO</b> module (or read the whole thing, and wrap it
in a <b>StringIO</b> object).</p><p>The following helper returns both the size of the file, and the size
of the image, usually without loading more than 1k or so.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">import</span> urllib
<span class="pykeyword">import</span> ImageFile

<span class="pykeyword">def</span> <span class="pyfunction">getsizes</span>(uri):
    <span class="pycomment"># get file size *and* image size (None if not known)</span>
    file = urllib.urlopen(uri)
    size = file.headers.get(<span class="pystring">"content-length"</span>)
    <span class="pykeyword">if</span> size: size = int(size)
    p = ImageFile.Parser()
    <span class="pykeyword">while</span> 1:
        data = file.read(1024)
        <span class="pykeyword">if</span> <span class="pykeyword">not</span> data:
            <span class="pykeyword">break</span>
        p.feed(data)
        <span class="pykeyword">if</span> p.image:
            <span class="pykeyword">return</span> size, p.image.size
            <span class="pykeyword">break</span>
    file.close()
    <span class="pykeyword">return</span> size, None

<span class="pykeyword">print</span> getsizes(<span class="pystring">"http://www.pythonware.com/images/small-yoyo.gif"</span>)
<span class="pycomment"># (10965, (179, 188))</span></pre></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
