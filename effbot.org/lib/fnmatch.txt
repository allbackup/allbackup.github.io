
@@module fnmatch

<h1>fnmatch&#8212;Unix filename pattern matching</h1>

<p>This module provides support for Unix shell-style wildcards, which
are {@em not} the same as regular expressions (which are documented in
the {@link re} module). The special characters used in shell-style
wildcards are:

<p><table border=1>
<tr> <th>
<p>Pattern
<th>
<p>Meaning
<tr> <td>
<p>{@code *}
<td>
<p>matches everything
<tr> <td>
<p>{@code ?}
<td>
<p>matches any single character
<tr> <td>
<p>{@code [}{@var seq}]
<td>
<p>matches any character in {@var seq}
<tr> <td>
<p>{@code [!}{@var seq}]
<td>
<p>matches any character not in {@var seq}
</table></p>

<p>Note that the filename separator ({@code '/'} on Unix) is {@em not}
special to this module. See module {@link glob} for pathname expansion
({@link glob} uses {@link fnmatch} to match pathname segments).
Similarly, filenames starting with a period are not special for this
module, and are matched by the {@code *} and {@code ?} patterns.

@@function fnmatch(filename, pattern)

<p>Test whether the {@var filename} string matches the {@var pattern}
string, returning true or false. If the operating system is
case-insensitive, then both parameters will be normalized to all lower-
or upper-case before the comparison is performed. If you require a
case-sensitive comparison regardless of whether that's standard for your
operating system, use {@link fnmatchcase} instead.

@@function fnmatchcase(filename, pattern)

<p>Test whether {@var filename} matches {@var pattern}, returning true
or false; the comparison is case-sensitive.

@@function filter(names, pattern)

<p>Return the subset of the list of {@var names} that match {@var
pattern}. It is the same as {@code [n for n in names if fnmatch(n,
pattern)]}, but implemented more efficiently.
<blockquote>
@since New in version 2.2. <br />
</blockquote>

@@text 

@see 
{@link glob Module glob}

Unix shell-style path expansion.
