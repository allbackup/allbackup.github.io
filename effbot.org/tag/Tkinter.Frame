<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>The Tkinter Frame&nbsp;Widget</title> <script type="text/javascript">effbot_page_id=1922;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <p><a href="entry.htm">back</a> <a href="label.htm">next</a></p> <h1 class="maintitle">The Tkinter Frame&nbsp;Widget</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p>A frame is rectangular region on the screen. The frame widget is
mainly used as a geometry master for other widgets, or to provide
padding between other widgets.</p><h2>When to use the Frame Widget</h2><p>Frame widgets are used to group other widgets into complex
layouts. They are also used for padding, and as a base class when
implementing compound widgets.</p><h2 id="patterns">Patterns&#160;<a class="nav" href="#patterns" title="bookmark!">#</a></h2><p>The frame widget can be used for decorations:</p><pre class="python">
<span class="pykeyword">from</span> Tkinter <span class="pykeyword">import</span> *

master = Tk()

Label(text=<span class="pystring">"one"</span>).pack()

separator = Frame(height=2, bd=1, relief=SUNKEN)
separator.pack(fill=X, padx=5, pady=5)

Label(text=<span class="pystring">"two"</span>).pack()

mainloop()</pre><p>The frame widget can be used as a place holder for video
overlays and other external processes.</p><p>To use a frame widget in this fashion, set the background color
to an empty string (this prevents updates, and leaves the color map
alone), pack it as usual, and use the <b>window_id</b> method to
get the window handle corresponding to the frame.</p><pre class="python">
frame = Frame(width=768, height=576, bg=<span class="pystring">""</span>, colormap=<span class="pystring">"new"</span>)
frame.pack()

video.attach_window(frame.window_id())</pre><p class="fixme">FIXME: add more patterns: gridded group, compound
widget pattern</p><h2 id="reference">Reference&#160;<a class="nav" href="#reference" title="bookmark!">#</a></h2><div class="zone:include"><dl><dt><b>Frame(master=None, **options)</b> (class) [<a href="#Tkinter.Frame-class">#</a>]</dt><dd>
<p>A widget container.</p><dl><dt><i>master</i></dt><dd>
Parent widget.</dd>
<dt><i>**options</i></dt><dd>
Widget options.  See the description of
   the <a class="link" href="#frame.Frame.config-method"><b>config</b></a> meth