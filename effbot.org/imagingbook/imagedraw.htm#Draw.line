<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head> <meta http-equiv="content-type" content="text/html; charset=utf-8"> <link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"> <link rel="shortcut icon" href="/media/img/effbot.ico"> <link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"> <link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"> <title>The ImageDraw&nbsp;Module</title> <script type="text/javascript">effbot_page_id=436;</script> </head> <body> <div id="doc2" class="yui-t2"> <div id="hd"> <!-- header --> </div> <!-- hd --> <div id="bd"> <!-- body --> <div id="yui-main"> <div class="yui-b"> <div class="content"><div class="yui-g"> <p><a href="imagecolor.htm">back</a> <a href="imageenhance.htm">next</a></p> <h1 class="maintitle">The ImageDraw&nbsp;Module</h1> </div> <!-- yui-g --><div class="yui-ge"><div class="yui-u first"><p>The <b>ImageDraw</b> module provide simple 2D graphics for
<b>Image</b> objects.  You can use this module to create new images,
annotate or retouch existing images, and to generate graphics on the
fly for web use.</p><p>For a more advanced drawing library for PIL, see
<a href="http://effbot.org/zone/aggdraw-index.htm"><cite>The aggdraw Module</cite></a>.</p><h2 id="examples">Example&#160;<a class="nav" href="#examples" title="bookmark!">#</a></h2><div class="example">
<b>Draw a Grey Cross Over an Image</b>
<pre class="python">
<span class="pykeyword">import</span> Image, ImageDraw

im = Image.open(<span class="pystring">"lena.pgm"</span>)

draw = ImageDraw.Draw(im)
draw.line((0, 0) + im.size, fill=128)
draw.line((0, im.size[1], im.size[0], 0), fill=128)
<span class="pykeyword">del</span> draw

<span class="pycomment"># write to stdout</span>
im.save(sys.stdout, <span class="pystring">"PNG"</span>)</pre></div><h2 id="concepts">Concepts&#160;<a class="nav" href="#concepts" title="bookmark!">#</a></h2><h3 id="coordinates">Coordinates&#160;<a class="nav" href="#coordinates" title="bookmark!">#</a></h3><p>The graphics interface uses the same coordinate system as PIL
itself, with (0, 0) in the upper left corner.</p><h3 id="colors">Colours&#160;<a class="nav" href="#colors" title="bookmark!">#</a></h3><p>To specify colours, you can use numbers or tuples just as you would
use with <b>Image.new</b> or <b>Image.putpixel</b>.  For &#8220;1&#8221;, &#8220;L&#8221;, and
&#8220;I&#8221; images, use integers.  For &#8220;RGB&#8221; images, use a 3-tuple containing
integer values.  For &#8220;F&#8221; images, use integer or floating point values.</p><p>For palette images (mode &#8220;P&#8221;), use integers as colour indexes.
In 1.1.4 and later, you can also use RGB 3-tuples or colour names
(see below).  The drawing layer will automatically assign colour
indexes, as long as you don&#8217;t draw with more than 256 colours.</p><h3 id="color-names">Colour Names&#160;<a class="nav" href="#color-names" title="bookmark!">#</a></h3><p>In PIL 1.1.4 and later, you can also use string constants when
drawing in &#8220;RGB&#8221; images.  PIL supports the following string
formats:</p><ul><li><p>Hexadecimal color specifiers, given as &#8220;#rgb&#8221; or &#8220;#rrggbb&#8221;.
For example, <b>&#8220;#ff0000&#8221;</b> specifies pure red.</p></li><li><p>RGB functions, given as &#8220;rgb(red, green, blue)&#8221; where the
colour values are integers in the range 0 to 255.  Alternatively, the
color values can be given as three percentages (0% to 100%).  For
example, <b>&#8220;rgb(255,0,0)&#8221;</b> and <b>&#8220;rgb(100%,0%,0%)&#8221;</b> both
specify pure red.</p></li><li><p>Hue-Saturation-Lightness (HSL) functions, given as <b>&#8220;hsl(hue,
saturation%, lightness%)&#8221;</b> where hue is the colour given as an
angle between 0 and 360 (red=0, green=120, blue=240), saturation is a
value between 0% and 100% (gray=0%, full color=100%), and lightness is
a value between 0% and 100% (black=0%, normal=50%, white=100%).  For
example, <b>&#8220;hsl(0,100%,50%)&#8221;</b> is pure red.</p></li><li><p>Common HTML colour names.  The <b>ImageDraw</b> provides some
140 standard colour names, based on the colors supported by the X
Window system and most web browsers.  Colour names are case
insensitive, and may contain whitespace.  For example, <b>&#8220;red&#8221;</b>
and <b>&#8220;Red&#8221;</b> both specify pure red.</p></li></ul><h3 id="fonts">Fonts&#160;<a class="nav" href="#fonts" title="bookmark!">#</a></h3><p>PIL can use bitmap fonts or OpenType/TrueType fonts.</p><p>Bitmap fonts are stored in PIL&#8217;s own format, where each font
typically consists of a two files, one named <b>.pil</b> and the other
usually named <b>.pbm</b>.  The former contains font metrics, the
latter raster data.</p><p>To load a bitmap font, use the <b>load</b> functions in the
<b>ImageFont</b> module.</p><p>To load a OpenType/TrueType font, use the <b>truetype</b> function
in the <b>ImageFont</b> module.  Note that this function depends on
third-party libraries, and may not available in all PIL builds.</p><p>(IronPIL) To load a built-in font, use the <b>Font</b> constructor
in the <b>ImageFont</b> module.</p><h2 id="functions">Functions&#160;<a class="nav" href="#functions" title="bookmark!">#</a></h2><h3 id="tag-ImageDraw.Draw">Draw&#160;<a class="nav" href="#tag-ImageDraw.Draw" title="bookmark!">#</a></h3><p><b>Draw(image)</b>
<span>&#8658; Draw instance</span></p><p>Creates an object that can be used to draw in the given image.</p><p>(IronPIL) Instead of an image, you can use HWND or HDC objects from
the <b>ImageWin</b> module.  This allows you to draw directly to the
screen.</p><p>Note that the image will be modified in place.</p><h2 id="methods">Methods&#160;<a class="nav" href="#methods" title="bookmark!">#</a></h2><h3 id="tag-ImageDraw.Draw.arc">arc&#160;<a class="nav" href="#tag-ImageDraw.Draw.arc" title="bookmark!">#</a></h3><p><b>draw.arc(xy, start, end, options)</b></p><p>Draws an arc (a portion of a circle outline) between the start and
end angles, inside the given bounding box.</p><p>The <b>outline</b> option gives the colour to use for the
arc.</p><h3 id="tag-ImageDraw.Draw.bitmap">bitmap&#160;<a class="nav" href="#tag-ImageDraw.Draw.bitmap" title="bookmark!">#</a></h3><p><b>draw.bitmap(xy, bitmap, options)</b></p><p>Draws a bitmap (mask) at the given position, using the current
fill colour for the non-zero portions.  The bitmap should be a valid
transparency mask (mode &#8220;1&#8221;) or matte (mode &#8220;L&#8221; or &#8220;RGBA&#8221;).</p><p>This is equivalent to doing <tt>image.paste(xy, color, bitmap)</tt>.</p><p>To paste pixel data into an image, use the <b>paste</b> method
on the image itself.</p><h3 id="tag-ImageDraw.Draw.chord">chord&#160;<a class="nav" href="#tag-ImageDraw.Draw.chord" title="bookmark!">#</a></h3><p><b>draw.chord(xy, start, end, options)</b></p><p>Same as <b>arc</b>, but connects the end points with a straight
line.</p><p>The <b>outline</b> option gives the colour to use for the
chord outline. The <b>fill</b> option gives the colour to use for
the chord interior.</p><h3 id="tag-ImageDraw.Draw.ellipse">ellipse&#160;<a class="nav" href="#tag-ImageDraw.Draw.ellipse" title="bookmark!">#</a></h3><p><b>draw.ellipse(xy, options)</b></p><p>Draws an ellipse inside the given bounding box.</p><p>The <b>outline</b> option gives the colour to use for the
ellipse outline. The <b>fill</b> option gives the colour to use
for the ellipse interior.</p><h3 id="tag-ImageDraw.Draw.line">line&#160;<a class="nav" href="#tag-ImageDraw.Draw.line" title="bookmark!">#</a></h3><p><b>draw.line(xy, options)</b></p><p>Draws a line between the coordinates in the <b>xy</b> list.</p><p>The coordinate list can be any sequence object containing either
2-tuples [ (<b>x, y</b>), &#8230; ] or numeric values [ <b>x</b>,
<b>y</b>, &#8230; ]. It should contain at least two coordinates.</p><p>The <b>fill</b> option gives the colour to use for the
line.</p><p>(New in 1.1.5) The <b>width</b> option gives the line width, in
pixels.  Note that line joins are not handled well, so wide polylines
will not look good.</p><p class="note"><b>Note:</b>
The <b>width</b> option is broken in 1.1.5.  The line is drawn with
twice the width you specify.  This will be fixed in 1.1.6.
</p><h3 id="tag-ImageDraw.Draw.pieslice">pieslice&#160;<a class="nav" href="#tag-ImageDraw.Draw.pieslice" title="bookmark!">#</a></h3><p><b>draw.pieslice(xy, start, end, options)</b></p><p>Same as <b>arc</b>, but also draws straight lines between the
end points and the center of the bounding box.</p><p>The <b>outline</b> option gives the colour to use for the
pieslice outline. The <b>fill</b> option gives the colour to use
for the pieslice interior.</p><h3 id="tag-ImageDraw.Draw.point">point&#160;<a class="nav" href="#tag-ImageDraw.Draw.point" title="bookmark!">#</a></h3><p><b>draw.point(xy, options)</b></p><p>Draws points (individual pixels) at the given coordinates.</p><p>The coordinate list can be any sequence object containing either
2-tuples [ (<b>x, y</b>), &#8230; ] or numeric values [ <b>x</b>,
<b>y</b>, &#8230; ].</p><p>The <b>fill</b> option gives the colour to use for the
points.</p><h3 id="tag-ImageDraw.Draw.polygon">polygon&#160;<a class="nav" href="#tag-ImageDraw.Draw.polygon" title="bookmark!">#</a></h3><p><b>draw.polygon(xy, options)</b></p><p>Draws a polygon.</p><p>The polygon outline consists of straight lines between the given
coordinates, plus a straight line between the last and the first
coordinate.</p><p>The coordinate list can be any sequence object containing either
2-tuples [ (<b>x, y</b>), &#8230; ] or numeric values [ <b>x</b>,
<b>y</b>, &#8230; ]. It should contain at least three
coordinates.</p><p>The <b>outline</b> option gives the colour to use for the
polygon outline. The <b>fill</b> option gives the colour to use
for the polygon interior.</p><h3 id="tag-ImageDraw.Draw.rectangle">rectangle&#160;<a class="nav" href="#tag-ImageDraw.Draw.rectangle" title="bookmark!">#</a></h3><p><b>draw.rectangle(box, options)</b></p><p>Draws a rectangle.</p><p>The box can be any sequence object containing either 2-tuples [
(<b>x, y</b>), (<b>x, y</b>) ] or numeric values [ <b>x</b>, <b>y</b>,
<b>x</b>, <b>y</b> ].  It should contain two coordinates.</p><p>Note that the second coordinate pair defines a point just
outside the rectangle, also when the rectangle is not filled.</p><p>The <b>outline</b> option gives the colour to use for the
rectangle outline. The <b>fill</b> option gives the colour to use
for the rectangle interior.</p><h3 id="tag-ImageDraw.Draw.text">text&#160;<a class="nav" href="#tag-ImageDraw.Draw.text" title="bookmark!">#</a></h3><p><b>draw.text(position, string, options)</b></p><p>Draws the string at the given position.  The position gives the
upper left corner of the text.</p><p>The <b>font</b> option is used to specify which font to use. It
should be an instance of the <b>ImageFont</b> class, typically
loaded from file using the <b>load</b> method in the
<b>ImageFont</b> module.</p><p>The <b>fill</b> option gives the colour to use for the
text.</p><h3 id="tag-ImageDraw.Draw.textsize">textsize&#160;<a class="nav" href="#tag-ImageDraw.Draw.textsize" title="bookmark!">#</a></h3><p><b>draw.textsize(string, options)</b>
<span>&#8658; (width, height)</span></p><p>Return the size of the given string, in pixels.</p><p>The <b>font</b> option is used to specify which font to use. It
should be an instance of the <b>ImageFont</b> class, typically
loaded from file using the <b>load</b> method in the
<b>ImageFont</b> module.</p><h2 id="options">Options&#160;<a class="nav" href="#options" title="bookmark!">#</a></h2><h3>outline</h3><div class="option"><p><b>outline</b>
<span>integer or tuple</span></p></div><h3>fill</h3><div class="option"><p><b>fill</b>
<span>integer or tuple</span></p></div><h3>font</h3><div class="option"><p><b>font</b>
<span>ImageFont instance</span></p></div><h2 id="compatibility">Compatibility&#160;<a class="nav" href="#compatibility" title="bookmark!">#</a></h2><p>The <b>Draw</b> class contains a constructor and a number of
methods which are provided for backwards compatibility only. For
this to work properly, you should <i>either</i> use options on the
drawing primitives, or these methods. Do not mix the old and new
calling conventions.</p><p>(IronPIL) The compatibility methods are not supported by IronPIL.</p><h3 id="tag-ImageDraw.ImageDraw">ImageDraw&#160;<a class="nav" href="#tag-ImageDraw.ImageDraw" title="bookmark!">#</a></h3><p><b>ImageDraw(image)</b>
<span>&#8658; Draw instance</span></p><p>(Deprecated).  Same as <b>Draw</b>. Don&#8217;t use this name in new
code.</p><h3 id="tag-ImageDraw.Draw.setink">setink&#160;<a class="nav" href="#tag-ImageDraw.Draw.setink" title="bookmark!">#</a></h3><p><b>draw.setink(ink)</b></p><p>(Deprecated).  Sets the colour to use for subsequent draw and fill
operations.</p><h3 id="tag-ImageDraw.Draw.setfill">setfill&#160;<a class="nav" href="#tag-ImageDraw.Draw.setfill" title="bookmark!">#</a></h3><p><b>draw.setfill(mode)</b></p><p>(Deprecated).  Sets the fill mode.</p><p>If the mode is 0, subsequently drawn shapes (like polygons and
rectangles) are outlined. If the mode is 1, they are filled.</p><h3 id="tag-ImageDraw.Draw.setfont">setfont&#160;<a class="nav" href="#tag-ImageDraw.Draw.setfont" title="bookmark!">#</a></h3><p><b>draw.setfont(font)</b></p><p>(Deprecated).  Sets the default font to use for the <b>text</b>
method.</p><p>The <b>font</b> argument should be an instance of the
<b>ImageFont</b> class, typically loaded from file using the
<b>load</b> method in the <b>ImageFont</b> module.</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"> <p><a href="imagecolor.htm">back</a> <a href="imageenhance.htm">next</a></p></div> <!-- yui-g --></div> <!-- content --> </div> <!-- yui-b --> </div> <!-- yui-main --> <div class="yui-b"> <div id='menu'> <ul> <li><b><a href="/">::: effbot.org</a></b></li> <li><b><a href=".">::: imagingbook :::</a></b></li> </ul> <ul><li><b>contents :::</b></li></ul> <ul><li><a href="#examples">Example</a></li><li><a href="#concepts">Concepts</a></li><li><ul><li><a href="#coordinates">Coordinates</a></li><li><a href="#colors">Colours</a></li><li><a href="#color-names">Colour Names</a></li><li><a href="#fonts">Fonts</a></li></ul></li><li><a href="#functions">Functions</a></li><li><ul><li><a href="#tag-ImageDraw.Draw">Draw</a></li></ul></li><li><a href="#methods">Methods</a></li><li><ul><li><a href="#tag-ImageDraw.Draw.arc">arc</a></li><li><a href="#tag-ImageDraw.Draw.bitmap">bitmap</a></li><li><a href="#tag-ImageDraw.Draw.chord">chord</a></li><li><a href="#tag-ImageDraw.Draw.ellipse">ellipse</a></li><li><a href="#tag-ImageDraw.Draw.line">line</a></li><li><a href="#tag-ImageDraw.Draw.pieslice">pieslice</a></li><li><a href="#tag-ImageDraw.Draw.point">point</a></li><li><a href="#tag-ImageDraw.Draw.polygon">polygon</a></li><li><a href="#tag-ImageDraw.Draw.rectangle">rectangle</a></li><li><a href="#tag-ImageDraw.Draw.text">text</a></li><li><a href="#tag-ImageDraw.Draw.textsize">textsize</a></li></ul></li><li><a href="#options">Options</a></li><li><a href="#compatibility">Compatibility</a></li><li><ul><li><a href="#tag-ImageDraw.ImageDraw">ImageDraw</a></li><li><a href="#tag-ImageDraw.Draw.setink">setink</a></li><li><a href="#tag-ImageDraw.Draw.setfill">setfill</a></li><li><a href="#tag-ImageDraw.Draw.setfont">setfont</a></li></ul></li></ul> </div> <!-- menu --> </div> <!-- yui-b --> </div> <!-- bd --> <div id="ft"> <!-- footer --> <p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15_grey.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;"></a>
this page was rendered by a <a href="http://www.djangoproject.com/">django</a> application in 0.06s 2007-09-21 09:32:35.794245.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p> </div> <!-- ft --> </div> <!-- doc --> <script src="/media/js/effbot-min.js" type="text/javascript"> </script> </body> </html>
