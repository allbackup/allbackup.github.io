<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>My class defines __del__ but it is not called when I delete the&nbsp;object.</title></head><body data-page-id="871"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">My class defines __del__ but it is not called when I delete the&nbsp;object.</h1></div><div class="yui-ge"><div class="yui-u first"><p>There are several possible reasons for this.</p><p>The del statement does not necessarily call <a href="/pyref/__del__.htm"><strong>__del__</strong></a> &#8212; it simply decrements the object&#8217;s reference count, and if this reaches zero <a href="/pyref/__del__.htm"><strong>__del__</strong></a> is called.</p><p>If your data structures contain circular links (e.g. a tree where each child has a parent reference and each parent has a list of children) the reference counts will never go back to zero. Once in a while Python runs an algorithm to detect such cycles, but the garbage collector might run some time after the last reference to your data structure vanishes, so your <a href="/pyref/__del__.htm"><strong>__del__</strong></a> method may be called at an inconvenient and random time. This is inconvenient if you&#8217;re trying to reproduce a problem. Worse, the order in which object&#8217;s <a href="/pyref/__del__.htm"><strong>__del__</strong></a> methods are executed is arbitrary. You can run <a href="/pyref/gc.collect.htm"><strong>gc.collect</strong></a> to force a collection, but there <em>are</em> pathological cases where objects will never be collected.</p><p>Despite the cycle collector, it&#8217;s still a good idea to define an explicit  close() method on objects to be called whenever you&#8217;re done with them. The  close() method can then remove attributes that refer to subobjecs. Don&#8217;t call <a href="/pyref/__del__.htm"><strong>__del__</strong></a> directly &#8212; <a href="/pyref/__del__.htm"><strong>__del__</strong></a> should call  close() and close() should make sure that it can be called more than once for the same object.</p><p>Another way to avoid cyclical references is to use the <a href="/pyref/weakref.htm"><strong>weakref</strong></a> module, which allows you to point to objects without incrementing their reference count. Tree data structures, for instance, should use weak references for their parent and sibling references (if they need them!).</p><p>If the object has ever been a local variable in a function that caught an expression in an <a href="/pyref/except.htm"><strong>except</strong></a> clause, chances are that a reference to the object still exists in that function&#8217;s stack frame as contained in the stack trace. Normally, calling <a href="/pyref/sys.exc_clear.htm"><strong>sys.exc_clear</strong></a> will take care of this by clearing the last recorded exception.</p><p>Finally, if your <a href="/pyref/__del__.htm"><strong>__del__</strong></a> method raises an exception, a warning message is printed to <a href="/pyref/sys.stderr.htm"><strong>sys.stderr</strong></a>.</p><p>CATEGORY: programming</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
