
@@module rgbimg

<h1>rgbimg&#8212;Read and write &#8220;SGI RGB&#8221; files</h1>

<p>The {@link rgbimg} module allows Python programs to access SGI imglib
image files (also known as .rgb files). The module is far from complete,
but is provided anyway since the functionality that there is enough in
some cases. Currently, colormap files are not supported.


<p class='note'><b>Note:</b> This module is only built by default for
32-bit platforms; it is not expected to work properly on other systems.

<p>The module defines the following variables and functions:

@@exception error

<p>This exception is raised on all errors, such as unsupported file
type, etc.

@@function sizeofimage(file)

<p>This function returns a tuple {@code (}{@var x}, {@var y}) where
{@var x} and {@var y} are the size of the image in pixels. Only 4 byte
RGBA pixels, 3 byte RGB pixels, and 1 byte greyscale pixels are
currently supported.

@@function longimagedata(file)

<p>This function reads and decodes the image on the specified file, and
returns it as a Python string. The string has 4 byte RGBA pixels. The
bottom left pixel is the first in the string. This format is suitable to
pass to {@link gl.lrectwrite}, for instance.

@@function longstoimage(data, x, y, z, file)

<p>This function writes the RGBA data in {@var data} to image file {@var
file}. {@var x} and {@var y} give the size of the image. {@var z} is 1
if the saved image should be 1 byte greyscale, 3 if the saved image
should be 3 byte RGB data, or 4 if the saved images should be 4 byte
RGBA data. The input data always contains 4 bytes per pixel. These are
the formats returned by {@link gl.lrectread}.

@@function ttob(flag)

<p>This function sets a global flag which defines whether the scan lines
of the image are read or written from bottom to top (flag is zero,
compatible with SGI GL) or from top to bottom(flag is one, compatible
with X). The default is zero.
