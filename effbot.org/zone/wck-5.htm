<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>In Progress: Displaying Formatted Text (Writing Widgets in Python, Part&nbsp;5)</title></head><body data-page-id="349"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><p><a href="wck-4.htm">back</a></p><h1 class="maintitle">In Progress: Displaying Formatted Text (Writing Widgets in Python, Part&nbsp;5)</h1></div><div class="yui-ge"><div class="yui-u first"><p class="info">June 2003 | Fredrik Lundh</p><p class="note">This article is being updated.</p><p>The <b>Widget Construction Kit</b> (WCK) is a programming interface
that you can use to create new widgets for Tkinter and other toolkits,
in pure Python.</p><p>This is the fifth article in <a href="wck.htm">a series</a>.  In
this article, we&#8217;ll look at how to display nicely formatted text in a
WCK widget.</p><p align="center" class="mark">:::</p><p>Not much here yet!</p><h2>Formatting Text Paragraphs</h2></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> WCK <span class="pykeyword">import</span> Widget, FONT, FOREGROUND

<span class="pykeyword">class</span> <span class="pyclass">SimpleTextView</span>(Widget):

    ui_option_text = <span class="pystring">""</span>

    ui_option_width = 200
    ui_option_height = 100

    ui_option_font = FONT

    ui_option_foreground = FOREGROUND

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_config</span>(self):
        self.font = self.ui_font(
            self.ui_option_foreground, self.ui_option_font
            )
        <span class="pykeyword">return</span> int(self.ui_option_width), int(self.ui_option_height)

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_repair</span>(self, draw, x0, y0, x1, y1):
        space = draw.textsize(<span class="pystring">" "</span>, self.font)[0]
        words = self.ui_option_text.split()
        x = y = 0
        <span class="pykeyword">for</span> word <span class="pykeyword">in</span> words:
            <span class="pycomment"># check size of this word</span>
            w, h = draw.textsize(word, self.font)
            <span class="pycomment"># figure out where to draw it</span>
            <span class="pykeyword">if</span> x:
                x += space
                <span class="pykeyword">if</span> x + w &gt; x1:
                    <span class="pycomment"># new line</span>
                    x = 0
                    y += h
            draw.text((x, y), word, self.font)
            x += w</pre></div><div class="yui-ge"><div class="yui-u first"><p>The drawing code treats the text as a single paragraph, consisting
of one long list of words.  Note that the code always draws words that
start at the left margin, even if they won&#8217;t fit on the line.  For all
other words (where <i>x</i> is not zero), the code checks if there&#8217;s
room for a space character and the word on the current line.  If not
(that is, if <i>x+w&gt;x1</i> where <i>x1</i> is the right margin),
it moves on to the next line.</p><p>Here&#8217;s an example:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> Tkinter <span class="pykeyword">import</span> *

root = Tk()

TEXT = <span class="pystring">"""</span>
I tell you I have been in the editorial business going on fourteen
years, and it is the first time I ever heard of a man's having to know
anything in order to edit a newspaper. You turnip!
"""

text = SimpleTextView(root, text=TEXT)
text.pack(fill=BOTH, expand=1)

mainloop()</pre></div><div class="yui-ge"><div class="yui-u first"><blockquote>
<img alt="" height="127" src="data:image/png;base64, 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 " width="208" />
</blockquote><h2>Speeding Things Up</h2><p>A little refactoring:</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"><pre class="python wide wide">
<span class="pykeyword">from</span> WCK <span class="pykeyword">import</span> Widget, FONT, FOREGROUND

<span class="pykeyword">class</span> <span class="pyclass">SimpleTextView</span>(Widget):

    ui_option_text = <span class="pystring">""</span>

    ui_option_width = 200
    ui_option_height = 100

    ui_option_font = FONT

    ui_option_foreground = FOREGROUND

    <span class="pykeyword">def</span> <span class="pyfunction">__init__</span>(self, master, **options):
        self.width = None
        self.words = None
        self.ui_init(master, options)

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_resize</span>(self, width, height):
        <span class="pykeyword">if</span> width != self.width:
            self.width = width
            self.words = None <span class="pycomment"># force reflow</span>

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_config</span>(self):
        self.font = self.ui_font(
            self.ui_option_foreground, self.ui_option_font
            )
        self.words = None
        <span class="pykeyword">return</span> int(self.ui_option_width), int(self.ui_option_height)

    <span class="pykeyword">def</span> <span class="pyfunction">ui_handle_repair</span>(self, draw, x0, y0, x1, y1):
        <span class="pykeyword">if</span> self.words <span class="pykeyword">is</span> None:
            <span class="pycomment"># reflow the text</span>
            <span class="pykeyword">if</span> <span class="pykeyword">not</span> self.width:
                <span class="pykeyword">return</span>
            self.words = []
            x = y = 0
            f = self.font
            space = draw.textsize(<span class="pystring">" "</span>, f)[0]
            <span class="pykeyword">for</span> word <span class="pykeyword">in</span> self.ui_option_text.split():
                w, h = draw.textsize(word, f)
                <span class="pykeyword">if</span> x:
                    x += space
                    <span class="pykeyword">if</span> x + w &gt; self.width:
                        x = 0
                        y += h
                self.words.append(((x, y), word, f))
                x += w
        <span class="pycomment"># render</span>
        text = draw.text
        <span class="pykeyword">for</span> args <span class="pykeyword">in</span> self.words:
            text(*args)</pre></div><div class="yui-ge"><div class="yui-u first"><h2>Displaying Styled Text</h2><h2>Displaying Scrolling Pages</h2></div><div class="yui-u">&#160;</div></div><div class="yui-g"><p><a href="wck-4.htm">back</a></p></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to zone index page.">::: zone :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
