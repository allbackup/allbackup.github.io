<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml"><link rel="shortcut icon" href="/media/img/effbot.ico"><link rel="stylesheet" href="/media/css/effbot-min.css" type="text/css" media="screen"><link rel="stylesheet" href="/media/css/effbotprint-min.css" type="text/css" media="print"><title>When importing module X, why do I get "undefined symbol:&nbsp;PyUnicodeUCS2*"?</title></head><body data-page-id="919"><div id="doc2" class="yui-t2"><div id="hd"></div><div id="bd"><p class="note" style="text-align: center"><strong>
This is an old copy of the Python FAQ.  The information here may be
outdated.
</strong></p><div id="yui-main"><div class="yui-b"><div class="content"><div class="yui-g"><h1 class="maintitle">When importing module X, why do I get "undefined symbol:&nbsp;PyUnicodeUCS2*"?</h1></div><div class="yui-ge"><div class="yui-u first"><p>You are using a version of Python that uses a 4-byte representation for Unicode characters, but some C extension module you are importing was compiled using a Python that uses a 2-byte representation for Unicode characters (the default).</p><p>If instead the name of the undefined symbol starts with  PyUnicodeUCS4, the problem is the reverse: Python was built using 2-byte Unicode characters, and the extension module was compiled using a Python with 4-byte Unicode characters.</p><p>This can easily occur when using pre-built extension packages. RedHat Linux 7.x, in particular, provided a &#8220;python2&#8221; binary that is compiled with 4-byte Unicode. This only causes the link failure if the extension uses <strong>PyUnicode_FromUnicode</strong> or any other of the PyUnicode functions. It is also a problem if an extension uses any of the Unicode-related format specifiers for <strong>Py_BuildValue</strong> (or similar) or parameter specifications for <strong>PyArg_ParseTuple</strong>.</p><p>You can check the size of the Unicode character a Python interpreter is using by checking the value of sys.maxunicode:</p><pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; if sys.maxunicode &gt; 65535:
...     print 'UCS4 build'
... else:
...     print 'UCS2 build'
</code></pre><p>The only way to solve this problem is to use extension modules compiled with a Python binary built using the same size for Unicode characters.</p><p>CATEGORY: extending</p></div><div class="yui-u">&#160;</div></div><div class="yui-g"></div></div></div></div><div class="yui-b"><div id='menu'><ul><li><b><a href="/" title="Go to effbot.org.">::: effbot.org</a></b></li><li><b><a href="." title="Go to pyfaq index page.">::: pyfaq :::</a></b></li></ul></div></div></div><div id="ft"><p><a href="http://www.djangoproject.com/"><img src="/media/img/djangosite80x15.gif" border="0" alt="A Django site." title="A Django site." style="vertical-align: bottom;" width="80" height="15" ></a>
rendered by a <a href="http://www.djangoproject.com/">django</a> application.  hosted by <a href="http://www.webfaction.com/shared_hosting?affiliate=slab">webfaction</a>.</p></div></div><script src="/media/js/effbot-min.js" type="text/javascript"></script></body></html>
